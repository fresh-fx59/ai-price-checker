# Nginx configuration for mTLS proxy
server {
    listen 80;
    listen [::]:80;
    server_name price-monitor.flowvian.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name price-monitor.flowvian.com;

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # SSL Configuration for client-facing connections
#    ssl_certificate /opt/price-monitor/certs/server.crt;
#    ssl_certificate_key /opt/price-monitor/certs/server.key;
    ssl_certificate /etc/letsencrypt/live/price-monitor.flowvian.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/price-monitor.flowvian.com/privkey.pem;

    
    # Client certificate configuration (optional - for end-to-end mTLS)
    ssl_client_certificate /opt/price-monitor/certs/ca.crt;
    ssl_verify_client on;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com; font-src 'self' https://cdnjs.cloudflare.com; script-src 'self' 'unsafe-inline'; img-src 'self' data: https: http:; connect-src 'self'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss;
    
    location / {
        # Proxy to HTTPS backend with client certificate
        proxy_pass https://127.0.0.1:8443;
        
        # Pass client certificate to backend
        proxy_ssl_certificate /opt/price-monitor/certs/nginx-client.crt;
        proxy_ssl_certificate_key /opt/price-monitor/certs/nginx-client.key;
        proxy_ssl_trusted_certificate /opt/price-monitor/certs/ca.crt;
        proxy_ssl_verify on;
        proxy_ssl_verify_depth 2;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SSL-specific headers
        proxy_set_header X-SSL-Client-Cert $ssl_client_cert;
        proxy_set_header X-SSL-Client-Verify $ssl_client_verify;
        proxy_set_header X-SSL-Client-S-DN $ssl_client_s_dn;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    location /health {
        proxy_pass https://127.0.0.1:8443/health;
        
        # Use client certificate for health checks
        proxy_ssl_certificate /opt/price-monitor/certs/nginx-client.crt;
        proxy_ssl_certificate_key /opt/price-monitor/certs/nginx-client.key;
        proxy_ssl_trusted_certificate /opt/price-monitor/certs/ca.crt;
        proxy_ssl_verify on;
        
        access_log off;
    }
    
    location /static/ {
        alias /opt/price-monitor/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# Note: Port 8443 is used directly by the Python application
# Nginx handles public access on ports 80/443 and proxies to the app