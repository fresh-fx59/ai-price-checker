{
  "start_time": "2025-08-11T23:56:37.255436",
  "end_time": "2025-08-12T00:21:25.937298",
  "duration": 1488.6818528175354,
  "total_tests": 93,
  "passed_tests": 62,
  "failed_tests": 15,
  "skipped_tests": 0,
  "error_tests": 16,
  "test_modules": [
    {
      "module": "tests.test_comprehensive_validation",
      "tests_run": 13,
      "failures": 5,
      "errors": 2,
      "skipped": 0,
      "success": false,
      "output": "test_complete_system_integration (tests.test_comprehensive_validation.TestAllRequirementsIntegration.test_complete_system_integration)\nTest all requirements working together in a complete workflow. ... ERROR\ntest_product_information_parsing (tests.test_comprehensive_validation.TestRequirement1AddProductURLs.test_product_information_parsing)\nTest product name, price, and image extraction. ... ok\ntest_url_validation_and_accessibility (tests.test_comprehensive_validation.TestRequirement1AddProductURLs.test_url_validation_and_accessibility)\nTest URL format validation and accessibility checking. ... ok\ntest_daily_price_check_workflow (tests.test_comprehensive_validation.TestRequirement2AutomaticDailyChecks.test_daily_price_check_workflow)\nTest complete daily price checking workflow. ... FAIL\ntest_multiple_products_checking (tests.test_comprehensive_validation.TestRequirement2AutomaticDailyChecks.test_multiple_products_checking)\nTest checking multiple products in daily run. ... FAIL\ntest_price_drop_email_notification (tests.test_comprehensive_validation.TestRequirement3EmailNotifications.test_price_drop_email_notification)\nTest email notification when price drops. ... FAIL\ntest_configuration_loading_and_validation (tests.test_comprehensive_validation.TestRequirement4ConfigurationManagement.test_configuration_loading_and_validation)\nTest configuration loading and validation. ... ok\ntest_missing_configuration_handling (tests.test_comprehensive_validation.TestRequirement4ConfigurationManagement.test_missing_configuration_handling)\nTest handling of missing required configuration. ... FAIL\ntest_docker_container_lifecycle (tests.test_comprehensive_validation.TestRequirement5DockerDeployment.test_docker_container_lifecycle)\nTest Docker container initialization and lifecycle. ... ok\ntest_product_viewing_and_management (tests.test_comprehensive_validation.TestRequirement6ProductManagement.test_product_viewing_and_management)\nTest product viewing and management functionality. ... ok\ntest_manual_price_update_workflow (tests.test_comprehensive_validation.TestRequirement7ManualPriceUpdates.test_manual_price_update_workflow)\nTest manual price update functionality. ... ERROR\ntest_price_history_tracking (tests.test_comprehensive_validation.TestRequirement8PriceHistoryTracking.test_price_history_tracking)\nTest comprehensive price history tracking. ... FAIL\ntest_multiple_parsing_strategies (tests.test_comprehensive_validation.TestRequirement9AIParsingTools.test_multiple_parsing_strategies)\nTest multiple parsing strategies and fallback handling. ... ok\n\n======================================================================\nERROR: test_complete_system_integration (tests.test_comprehensive_validation.TestAllRequirementsIntegration.test_complete_system_integration)\nTest all requirements working together in a complete workflow.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_comprehensive_validation.py\", line 803, in test_complete_system_integration\n    app.product_service.update_price_manually(product.id, 139.99)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'ProductService' object has no attribute 'update_price_manually'\n\nStdout:\n2025-08-11 23:56:37,645 - src.main - INFO - Basic logging initialized\n2025-08-11 23:56:37,645 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-11 23:56:37,645 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpwniabghw/validation_config.properties\n2025-08-11 23:56:37,646 - src.main - INFO - Log level set to: INFO\n2025-08-11 23:56:37,646 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-11 23:56:37,646 - src.main - INFO - Configuration loaded successfully\n2025-08-11 23:56:37,646 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-11 23:56:37,646 - src.services.logging_service - INFO - Logging service initialized\n2025-08-11 23:56:37,646 - src.main - INFO - Comprehensive logging service initialized\n2025-08-11 23:56:37,646 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpwniabghw/validation_database.db\n2025-08-11 23:56:37,652 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpwniabghw/validation_database.db\n2025-08-11 23:56:37,652 - src.main - INFO - Initializing services...\n2025-08-11 23:56:37,652 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:56:37,652 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:56:37,669 - src.services.email_service - ERROR - Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-11 23:56:37,670 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-11 23:56:37,670 - src.main - INFO - All services initialized successfully\n2025-08-11 23:56:37,670 - src.main - INFO - Initializing Flask application...\n2025-08-11 23:56:37,671 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:56:37,671 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:56:37,671 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-11 23:56:37,672 - src.main - INFO - Flask application initialized\n2025-08-11 23:56:37,672 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-11 23:56:37,673 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-11 23:56:37,673 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-11 23:56:37,673 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-11 23:56:37,673 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-11 23:56:37,673 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-11 23:56:37,673 - src.services.parser_service - INFO - Starting product parsing for URL: https://example.com/product/1\n2025-08-11 23:56:37,673 - src.services.parser_service - INFO - Attempting to parse with StructuredDataParser\n2025-08-11 23:56:37,674 - src.parsers.product_parser.StructuredDataParser - INFO - Successfully parsed structured data: Premium Test Widget - $149.99\n2025-08-11 23:56:37,674 - src.services.parser_service - INFO - Parser StructuredDataParser succeeded with confidence 0.9\n2025-08-11 23:56:37,674 - src.services.parser_service - INFO - High confidence result from StructuredDataParser, stopping\n2025-08-11 23:56:37,674 - src.services.parser_service - INFO - Best parsing result from StructuredDataParser with confidence 0.9\n2025-08-11 23:56:37,683 - src.main - INFO - Initiating graceful shutdown...\n2025-08-11 23:56:42,688 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-11 23:56:42,688 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-11 23:56:42,688 - src.main - INFO - Graceful shutdown completed\n\n======================================================================\nERROR: test_manual_price_update_workflow (tests.test_comprehensive_validation.TestRequirement7ManualPriceUpdates.test_manual_price_update_workflow)\nTest manual price update functionality.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_comprehensive_validation.py\", line 608, in test_manual_price_update_workflow\n    update_result = app.product_service.update_price_manually(product.id, manual_price)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'ProductService' object has no attribute 'update_price_manually'\n\nStdout:\n2025-08-11 23:57:43,703 - src.main - INFO - Basic logging initialized\n2025-08-11 23:57:43,703 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-11 23:57:43,703 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpjjcyfp3a/validation_config.properties\n2025-08-11 23:57:43,703 - src.main - INFO - Log level set to: INFO\n2025-08-11 23:57:43,703 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-11 23:57:43,703 - src.main - INFO - Configuration loaded successfully\n2025-08-11 23:57:43,703 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-11 23:57:43,704 - src.services.logging_service - INFO - Logging service initialized\n2025-08-11 23:57:43,704 - src.main - INFO - Comprehensive logging service initialized\n2025-08-11 23:57:43,704 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpjjcyfp3a/validation_database.db\n2025-08-11 23:57:43,707 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpjjcyfp3a/validation_database.db\n2025-08-11 23:57:43,707 - src.main - INFO - Initializing services...\n2025-08-11 23:57:43,707 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:43,707 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:43,726 - src.services.email_service - ERROR - Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-11 23:57:43,727 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-11 23:57:43,727 - src.main - INFO - All services initialized successfully\n2025-08-11 23:57:43,727 - src.main - INFO - Initializing Flask application...\n2025-08-11 23:57:43,728 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:43,728 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:43,728 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-11 23:57:43,730 - src.main - INFO - Flask application initialized\n2025-08-11 23:57:43,730 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-11 23:57:43,730 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-11 23:57:43,730 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-11 23:57:43,730 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-11 23:57:43,730 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-11 23:57:43,731 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-11 23:57:43,731 - src.services.parser_service - INFO - Starting product parsing for URL: https://example.com/product/1\n2025-08-11 23:57:43,731 - src.services.parser_service - INFO - Attempting to parse with StructuredDataParser\n2025-08-11 23:57:43,731 - src.parsers.product_parser.StructuredDataParser - INFO - Successfully parsed structured data: Premium Test Widget - $149.99\n2025-08-11 23:57:43,731 - src.services.parser_service - INFO - Parser StructuredDataParser succeeded with confidence 0.9\n2025-08-11 23:57:43,731 - src.services.parser_service - INFO - High confidence result from StructuredDataParser, stopping\n2025-08-11 23:57:43,731 - src.services.parser_service - INFO - Best parsing result from StructuredDataParser with confidence 0.9\n2025-08-11 23:57:43,736 - src.main - INFO - Initiating graceful shutdown...\n2025-08-11 23:57:48,741 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-11 23:57:48,742 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-11 23:57:48,742 - src.main - INFO - Graceful shutdown completed\n\n======================================================================\nFAIL: test_daily_price_check_workflow (tests.test_comprehensive_validation.TestRequirement2AutomaticDailyChecks.test_daily_price_check_workflow)\nTest complete daily price checking workflow.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_comprehensive_validation.py\", line 297, in test_daily_price_check_workflow\n    self.assertTrue(check_result.success)\nAssertionError: False is not true\n\nStdout:\n2025-08-11 23:56:52,870 - src.main - INFO - Basic logging initialized\n2025-08-11 23:56:52,870 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-11 23:56:52,870 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpgizqpd7v/validation_config.properties\n2025-08-11 23:56:52,870 - src.main - INFO - Log level set to: INFO\n2025-08-11 23:56:52,871 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-11 23:56:52,871 - src.main - INFO - Configuration loaded successfully\n2025-08-11 23:56:52,871 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-11 23:56:52,871 - src.services.logging_service - INFO - Logging service initialized\n2025-08-11 23:56:52,871 - src.main - INFO - Comprehensive logging service initialized\n2025-08-11 23:56:52,871 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpgizqpd7v/validation_database.db\n2025-08-11 23:56:52,874 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpgizqpd7v/validation_database.db\n2025-08-11 23:56:52,874 - src.main - INFO - Initializing services...\n2025-08-11 23:56:52,874 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:56:52,874 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:56:52,894 - src.services.email_service - ERROR - Email connection test failed: [Errno 8] nodename nor servname provided, or not known\n2025-08-11 23:56:52,895 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: [Errno 8] nodename nor servname provided, or not known\n2025-08-11 23:56:52,895 - src.main - INFO - All services initialized successfully\n2025-08-11 23:56:52,895 - src.main - INFO - Initializing Flask application...\n2025-08-11 23:56:52,896 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:56:52,896 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:56:52,896 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-11 23:56:52,899 - src.main - INFO - Flask application initialized\n2025-08-11 23:56:52,899 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-11 23:56:52,899 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-11 23:56:52,899 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-11 23:56:52,899 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-11 23:56:52,900 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-11 23:56:52,900 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-11 23:56:52,900 - src.services.parser_service - INFO - Starting product parsing for URL: https://example.com/product/1\n2025-08-11 23:56:52,900 - src.services.parser_service - INFO - Attempting to parse with StructuredDataParser\n2025-08-11 23:56:52,900 - src.parsers.product_parser.StructuredDataParser - INFO - Successfully parsed structured data: Premium Test Widget - $149.99\n2025-08-11 23:56:52,900 - src.services.parser_service - INFO - Parser StructuredDataParser succeeded with confidence 0.9\n2025-08-11 23:56:52,900 - src.services.parser_service - INFO - High confidence result from StructuredDataParser, stopping\n2025-08-11 23:56:52,901 - src.services.parser_service - INFO - Best parsing result from StructuredDataParser with confidence 0.9\n2025-08-11 23:56:52,907 - src.services.price_monitor_service - INFO - Checking price for product: Premium Test Widget (https://example.com/product/1)\n2025-08-11 23:56:52,907 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:56:54,002 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:54,002 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:54,002 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 1): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:54,003 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 1.0 seconds (attempt 2/4)\n2025-08-11 23:56:55,008 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:56:55,158 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:55,158 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:55,158 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 2): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:55,158 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 2.0 seconds (attempt 3/4)\n2025-08-11 23:56:57,163 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:56:57,309 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:57,309 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:57,309 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 3): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:57,309 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 4.0 seconds (attempt 4/4)\n2025-08-11 23:57:01,315 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:01,453 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:01,454 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:01,454 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 4): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:01,454 - src.services.price_monitor_service - ERROR - Product 1 (https://example.com/product/1) failed all 4 attempts. Total consecutive failures: 4\n2025-08-11 23:57:01,454 - src.services.logging_service - INFO - Performance metric: price_check\n2025-08-11 23:57:01,455 - src.main - INFO - Initiating graceful shutdown...\n2025-08-11 23:57:06,460 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-11 23:57:06,460 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-11 23:57:06,461 - src.main - INFO - Graceful shutdown completed\n\n======================================================================\nFAIL: test_multiple_products_checking (tests.test_comprehensive_validation.TestRequirement2AutomaticDailyChecks.test_multiple_products_checking)\nTest checking multiple products in daily run.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_comprehensive_validation.py\", line 359, in test_multiple_products_checking\n    self.assertEqual(mock_scraping_instance.fetch_page_content.call_count, 4)  # 2 for adding + 2 for checking\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAssertionError: 0 != 4\n\nStdout:\n2025-08-11 23:57:06,463 - src.main - INFO - Basic logging initialized\n2025-08-11 23:57:06,463 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-11 23:57:06,463 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpgizqpd7v/validation_config.properties\n2025-08-11 23:57:06,463 - src.main - INFO - Log level set to: INFO\n2025-08-11 23:57:06,463 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-11 23:57:06,463 - src.main - INFO - Configuration loaded successfully\n2025-08-11 23:57:06,463 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-11 23:57:06,464 - src.services.logging_service - INFO - Logging service initialized\n2025-08-11 23:57:06,464 - src.main - INFO - Comprehensive logging service initialized\n2025-08-11 23:57:06,464 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpgizqpd7v/validation_database.db\n2025-08-11 23:57:06,466 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpgizqpd7v/validation_database.db\n2025-08-11 23:57:06,466 - src.main - INFO - Initializing services...\n2025-08-11 23:57:06,466 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:06,466 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:06,488 - src.services.email_service - ERROR - Email connection test failed: [Errno 8] nodename nor servname provided, or not known\n2025-08-11 23:57:06,489 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: [Errno 8] nodename nor servname provided, or not known\n2025-08-11 23:57:06,489 - src.main - INFO - All services initialized successfully\n2025-08-11 23:57:06,489 - src.main - INFO - Initializing Flask application...\n2025-08-11 23:57:06,490 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:06,490 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:06,490 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-11 23:57:06,492 - src.main - INFO - Flask application initialized\n2025-08-11 23:57:06,492 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-11 23:57:06,492 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-11 23:57:06,493 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-11 23:57:06,493 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-11 23:57:06,493 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-11 23:57:06,493 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-11 23:57:06,493 - src.services.parser_service - INFO - Starting product parsing for URL: https://example.com/product/1\n2025-08-11 23:57:06,493 - src.services.parser_service - INFO - Attempting to parse with StructuredDataParser\n2025-08-11 23:57:06,493 - src.parsers.product_parser.StructuredDataParser - INFO - Successfully parsed structured data: Premium Test Widget - $149.99\n2025-08-11 23:57:06,494 - src.services.parser_service - INFO - Parser StructuredDataParser succeeded with confidence 0.9\n2025-08-11 23:57:06,494 - src.services.parser_service - INFO - High confidence result from StructuredDataParser, stopping\n2025-08-11 23:57:06,494 - src.services.parser_service - INFO - Best parsing result from StructuredDataParser with confidence 0.9\n2025-08-11 23:57:06,499 - src.services.parser_service - INFO - Starting product parsing for URL: https://example.com/product/2\n2025-08-11 23:57:06,500 - src.services.parser_service - INFO - Attempting to parse with StructuredDataParser\n2025-08-11 23:57:06,500 - src.parsers.product_parser.StructuredDataParser - INFO - Successfully parsed structured data: Premium Test Widget - $149.99\n2025-08-11 23:57:06,500 - src.services.parser_service - INFO - Parser StructuredDataParser succeeded with confidence 0.9\n2025-08-11 23:57:06,500 - src.services.parser_service - INFO - High confidence result from StructuredDataParser, stopping\n2025-08-11 23:57:06,500 - src.services.parser_service - INFO - Best parsing result from StructuredDataParser with confidence 0.9\n2025-08-11 23:57:06,503 - src.services.price_monitor_service - INFO - Starting price check for 2 products\n2025-08-11 23:57:06,504 - src.services.price_monitor_service - INFO - Checking price for product: Premium Test Widget (https://example.com/product/2)\n2025-08-11 23:57:06,504 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/2 (attempt 1)\n2025-08-11 23:57:06,504 - src.services.price_monitor_service - INFO - Checking price for product: Premium Test Widget (https://example.com/product/1)\n2025-08-11 23:57:06,505 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:06,985 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:06,985 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:06,985 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 1): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:06,985 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 1.0 seconds (attempt 2/4)\n2025-08-11 23:57:07,565 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/2: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:07,565 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/2: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:07,566 - src.services.price_monitor_service - WARNING - Price check failed for product 2 (attempt 1): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:07,566 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/2 in 1.0 seconds (attempt 2/4)\n2025-08-11 23:57:07,989 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:08,168 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:08,168 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:08,168 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 2): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:08,168 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 2.0 seconds (attempt 3/4)\n2025-08-11 23:57:08,571 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/2 (attempt 1)\n2025-08-11 23:57:08,793 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/2: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:08,797 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/2: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:08,797 - src.services.price_monitor_service - WARNING - Price check failed for product 2 (attempt 2): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:08,797 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/2 in 2.0 seconds (attempt 3/4)\n2025-08-11 23:57:10,173 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:10,327 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:10,327 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:10,327 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 3): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:10,327 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 4.0 seconds (attempt 4/4)\n2025-08-11 23:57:10,802 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/2 (attempt 1)\n2025-08-11 23:57:10,983 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/2: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:10,983 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/2: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:10,983 - src.services.price_monitor_service - WARNING - Price check failed for product 2 (attempt 3): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:10,984 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/2 in 4.0 seconds (attempt 4/4)\n2025-08-11 23:57:14,332 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:14,486 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:14,486 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:14,486 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 4): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:14,486 - src.services.price_monitor_service - ERROR - Product 1 (https://example.com/product/1) failed all 4 attempts. Total consecutive failures: 4\n2025-08-11 23:57:14,486 - src.services.logging_service - INFO - Performance metric: price_check\n2025-08-11 23:57:14,986 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/2 (attempt 1)\n2025-08-11 23:57:15,138 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/2: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:15,138 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/2: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:15,138 - src.services.price_monitor_service - WARNING - Price check failed for product 2 (attempt 4): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:15,138 - src.services.price_monitor_service - ERROR - Product 2 (https://example.com/product/2) failed all 4 attempts. Total consecutive failures: 4\n2025-08-11 23:57:15,138 - src.services.logging_service - INFO - Performance metric: price_check\n2025-08-11 23:57:15,139 - src.services.price_monitor_service - INFO - Price check completed: 0/2 successful, 0 price drops, 0 new lowest prices, 0 notifications sent, 0 notification failures, duration: 8.6s\n2025-08-11 23:57:15,140 - src.main - INFO - Initiating graceful shutdown...\n2025-08-11 23:57:20,148 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-11 23:57:20,149 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-11 23:57:20,149 - src.main - INFO - Graceful shutdown completed\n\n======================================================================\nFAIL: test_price_drop_email_notification (tests.test_comprehensive_validation.TestRequirement3EmailNotifications.test_price_drop_email_notification)\nTest email notification when price drops.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_comprehensive_validation.py\", line 403, in test_price_drop_email_notification\n    self.assertTrue(check_result.success)\nAssertionError: False is not true\n\nStdout:\n2025-08-11 23:57:20,151 - src.main - INFO - Basic logging initialized\n2025-08-11 23:57:20,151 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-11 23:57:20,151 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmp34ryq409/validation_config.properties\n2025-08-11 23:57:20,152 - src.main - INFO - Log level set to: INFO\n2025-08-11 23:57:20,152 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-11 23:57:20,152 - src.main - INFO - Configuration loaded successfully\n2025-08-11 23:57:20,152 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-11 23:57:20,152 - src.services.logging_service - INFO - Logging service initialized\n2025-08-11 23:57:20,152 - src.main - INFO - Comprehensive logging service initialized\n2025-08-11 23:57:20,152 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmp34ryq409/validation_database.db\n2025-08-11 23:57:20,154 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmp34ryq409/validation_database.db\n2025-08-11 23:57:20,154 - src.main - INFO - Initializing services...\n2025-08-11 23:57:20,154 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:20,154 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:20,177 - src.services.email_service - ERROR - Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-11 23:57:20,179 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-11 23:57:20,179 - src.main - INFO - All services initialized successfully\n2025-08-11 23:57:20,179 - src.main - INFO - Initializing Flask application...\n2025-08-11 23:57:20,180 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:20,180 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:20,180 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-11 23:57:20,182 - src.main - INFO - Flask application initialized\n2025-08-11 23:57:20,182 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-11 23:57:20,182 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-11 23:57:20,182 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-11 23:57:20,182 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-11 23:57:20,183 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-11 23:57:20,183 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-11 23:57:20,183 - src.services.parser_service - INFO - Starting product parsing for URL: https://example.com/product/1\n2025-08-11 23:57:20,183 - src.services.parser_service - INFO - Attempting to parse with StructuredDataParser\n2025-08-11 23:57:20,183 - src.parsers.product_parser.StructuredDataParser - INFO - Successfully parsed structured data: Premium Test Widget - $149.99\n2025-08-11 23:57:20,183 - src.services.parser_service - INFO - Parser StructuredDataParser succeeded with confidence 0.9\n2025-08-11 23:57:20,183 - src.services.parser_service - INFO - High confidence result from StructuredDataParser, stopping\n2025-08-11 23:57:20,183 - src.services.parser_service - INFO - Best parsing result from StructuredDataParser with confidence 0.9\n2025-08-11 23:57:20,188 - src.services.price_monitor_service - INFO - Checking price for product: Premium Test Widget (https://example.com/product/1)\n2025-08-11 23:57:20,188 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:20,645 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:20,649 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:20,649 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 1): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:20,649 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 1.0 seconds (attempt 2/4)\n2025-08-11 23:57:21,654 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:21,897 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:21,898 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:21,898 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 2): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:21,898 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 2.0 seconds (attempt 3/4)\n2025-08-11 23:57:23,903 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:24,370 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:24,370 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:24,370 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 3): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:24,370 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 4.0 seconds (attempt 4/4)\n2025-08-11 23:57:28,375 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:28,554 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:28,554 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:28,555 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 4): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:28,555 - src.services.price_monitor_service - ERROR - Product 1 (https://example.com/product/1) failed all 4 attempts. Total consecutive failures: 4\n2025-08-11 23:57:28,555 - src.services.logging_service - INFO - Performance metric: price_check\n2025-08-11 23:57:28,555 - src.main - INFO - Initiating graceful shutdown...\n2025-08-11 23:57:33,560 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-11 23:57:33,560 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-11 23:57:33,560 - src.main - INFO - Graceful shutdown completed\n\n======================================================================\nFAIL: test_missing_configuration_handling (tests.test_comprehensive_validation.TestRequirement4ConfigurationManagement.test_missing_configuration_handling)\nTest handling of missing required configuration.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_comprehensive_validation.py\", line 482, in test_missing_configuration_handling\n    with self.assertRaises(Exception) as context:\nAssertionError: Exception not raised\n\nStdout:\n2025-08-11 23:57:38,602 - src.main - INFO - Basic logging initialized\n2025-08-11 23:57:38,602 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-11 23:57:38,602 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpyq4ktn_t/incomplete_config.properties\n2025-08-11 23:57:38,603 - src.main - ERROR - Failed to load configuration: Configuration validation failed:\nConfiguration Errors:\n  - ERROR: smtp_server - SMTP server is required for email notifications\n  - ERROR: smtp_username - SMTP username is required for email authentication\n  - ERROR: smtp_password - SMTP password is required for email authentication\n  - ERROR: recipient_email - Recipient email is required for notifications\n\n======================================================================\nFAIL: test_price_history_tracking (tests.test_comprehensive_validation.TestRequirement8PriceHistoryTracking.test_price_history_tracking)\nTest comprehensive price history tracking.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_comprehensive_validation.py\", line 679, in test_price_history_tracking\n    self.assertEqual(updated_product.current_price, 119.99)\nAssertionError: 149.99 != 119.99\n\nStdout:\n2025-08-11 23:57:48,746 - src.main - INFO - Basic logging initialized\n2025-08-11 23:57:48,746 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-11 23:57:48,746 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmp44nieda7/validation_config.properties\n2025-08-11 23:57:48,747 - src.main - INFO - Log level set to: INFO\n2025-08-11 23:57:48,747 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-11 23:57:48,747 - src.main - INFO - Configuration loaded successfully\n2025-08-11 23:57:48,747 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-11 23:57:48,748 - src.services.logging_service - INFO - Logging service initialized\n2025-08-11 23:57:48,748 - src.main - INFO - Comprehensive logging service initialized\n2025-08-11 23:57:48,748 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmp44nieda7/validation_database.db\n2025-08-11 23:57:48,750 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmp44nieda7/validation_database.db\n2025-08-11 23:57:48,750 - src.main - INFO - Initializing services...\n2025-08-11 23:57:48,750 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:48,750 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:48,774 - src.services.email_service - ERROR - Email connection test failed: [Errno 8] nodename nor servname provided, or not known\n2025-08-11 23:57:48,775 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: [Errno 8] nodename nor servname provided, or not known\n2025-08-11 23:57:48,775 - src.main - INFO - All services initialized successfully\n2025-08-11 23:57:48,775 - src.main - INFO - Initializing Flask application...\n2025-08-11 23:57:48,776 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:48,776 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:48,776 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-11 23:57:48,778 - src.main - INFO - Flask application initialized\n2025-08-11 23:57:48,779 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-11 23:57:48,779 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-11 23:57:48,779 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-11 23:57:48,779 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-11 23:57:48,779 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-11 23:57:48,779 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-11 23:57:48,779 - src.services.parser_service - INFO - Starting product parsing for URL: https://example.com/product/1\n2025-08-11 23:57:48,779 - src.services.parser_service - INFO - Attempting to parse with StructuredDataParser\n2025-08-11 23:57:48,780 - src.parsers.product_parser.StructuredDataParser - INFO - Successfully parsed structured data: Premium Test Widget - $149.99\n2025-08-11 23:57:48,780 - src.services.parser_service - INFO - Parser StructuredDataParser succeeded with confidence 0.9\n2025-08-11 23:57:48,780 - src.services.parser_service - INFO - High confidence result from StructuredDataParser, stopping\n2025-08-11 23:57:48,780 - src.services.parser_service - INFO - Best parsing result from StructuredDataParser with confidence 0.9\n2025-08-11 23:57:48,787 - src.services.price_monitor_service - INFO - Checking price for product: Premium Test Widget (https://example.com/product/1)\n2025-08-11 23:57:48,787 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:49,252 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:49,252 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:49,252 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 1): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:49,252 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 1.0 seconds (attempt 2/4)\n2025-08-11 23:57:50,257 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:50,404 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:50,404 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:50,404 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 2): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:50,404 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 2.0 seconds (attempt 3/4)\n2025-08-11 23:57:52,405 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:52,553 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:52,554 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:52,554 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 3): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:52,554 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 4.0 seconds (attempt 4/4)\n2025-08-11 23:57:56,559 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:56,893 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:56,893 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:56,893 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 4): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:56,893 - src.services.price_monitor_service - ERROR - Product 1 (https://example.com/product/1) failed all 4 attempts. Total consecutive failures: 4\n2025-08-11 23:57:56,893 - src.services.logging_service - INFO - Performance metric: price_check\n2025-08-11 23:57:56,894 - src.main - INFO - Initiating graceful shutdown...\n2025-08-11 23:58:01,898 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-11 23:58:01,898 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-11 23:58:01,899 - src.main - INFO - Graceful shutdown completed\n\n----------------------------------------------------------------------\nRan 13 tests in 89.316s\n\nFAILED (failures=5, errors=2)\n",
      "failure_details": [
        {
          "test": "test_daily_price_check_workflow (tests.test_comprehensive_validation.TestRequirement2AutomaticDailyChecks.test_daily_price_check_workflow)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_comprehensive_validation.py\", line 297, in test_daily_price_check_workflow\n    self.assertTrue(check_result.success)\nAssertionError: False is not true\n\nStdout:\n2025-08-11 23:56:52,870 - src.main - INFO - Basic logging initialized\n2025-08-11 23:56:52,870 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-11 23:56:52,870 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpgizqpd7v/validation_config.properties\n2025-08-11 23:56:52,870 - src.main - INFO - Log level set to: INFO\n2025-08-11 23:56:52,871 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-11 23:56:52,871 - src.main - INFO - Configuration loaded successfully\n2025-08-11 23:56:52,871 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-11 23:56:52,871 - src.services.logging_service - INFO - Logging service initialized\n2025-08-11 23:56:52,871 - src.main - INFO - Comprehensive logging service initialized\n2025-08-11 23:56:52,871 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpgizqpd7v/validation_database.db\n2025-08-11 23:56:52,874 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpgizqpd7v/validation_database.db\n2025-08-11 23:56:52,874 - src.main - INFO - Initializing services...\n2025-08-11 23:56:52,874 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:56:52,874 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:56:52,894 - src.services.email_service - ERROR - Email connection test failed: [Errno 8] nodename nor servname provided, or not known\n2025-08-11 23:56:52,895 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: [Errno 8] nodename nor servname provided, or not known\n2025-08-11 23:56:52,895 - src.main - INFO - All services initialized successfully\n2025-08-11 23:56:52,895 - src.main - INFO - Initializing Flask application...\n2025-08-11 23:56:52,896 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:56:52,896 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:56:52,896 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-11 23:56:52,899 - src.main - INFO - Flask application initialized\n2025-08-11 23:56:52,899 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-11 23:56:52,899 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-11 23:56:52,899 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-11 23:56:52,899 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-11 23:56:52,900 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-11 23:56:52,900 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-11 23:56:52,900 - src.services.parser_service - INFO - Starting product parsing for URL: https://example.com/product/1\n2025-08-11 23:56:52,900 - src.services.parser_service - INFO - Attempting to parse with StructuredDataParser\n2025-08-11 23:56:52,900 - src.parsers.product_parser.StructuredDataParser - INFO - Successfully parsed structured data: Premium Test Widget - $149.99\n2025-08-11 23:56:52,900 - src.services.parser_service - INFO - Parser StructuredDataParser succeeded with confidence 0.9\n2025-08-11 23:56:52,900 - src.services.parser_service - INFO - High confidence result from StructuredDataParser, stopping\n2025-08-11 23:56:52,901 - src.services.parser_service - INFO - Best parsing result from StructuredDataParser with confidence 0.9\n2025-08-11 23:56:52,907 - src.services.price_monitor_service - INFO - Checking price for product: Premium Test Widget (https://example.com/product/1)\n2025-08-11 23:56:52,907 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:56:54,002 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:54,002 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:54,002 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 1): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:54,003 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 1.0 seconds (attempt 2/4)\n2025-08-11 23:56:55,008 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:56:55,158 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:55,158 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:55,158 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 2): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:55,158 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 2.0 seconds (attempt 3/4)\n2025-08-11 23:56:57,163 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:56:57,309 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:57,309 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:57,309 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 3): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:56:57,309 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 4.0 seconds (attempt 4/4)\n2025-08-11 23:57:01,315 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:01,453 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:01,454 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:01,454 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 4): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:01,454 - src.services.price_monitor_service - ERROR - Product 1 (https://example.com/product/1) failed all 4 attempts. Total consecutive failures: 4\n2025-08-11 23:57:01,454 - src.services.logging_service - INFO - Performance metric: price_check\n2025-08-11 23:57:01,455 - src.main - INFO - Initiating graceful shutdown...\n2025-08-11 23:57:06,460 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-11 23:57:06,460 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-11 23:57:06,461 - src.main - INFO - Graceful shutdown completed\n"
        },
        {
          "test": "test_multiple_products_checking (tests.test_comprehensive_validation.TestRequirement2AutomaticDailyChecks.test_multiple_products_checking)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_comprehensive_validation.py\", line 359, in test_multiple_products_checking\n    self.assertEqual(mock_scraping_instance.fetch_page_content.call_count, 4)  # 2 for adding + 2 for checking\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAssertionError: 0 != 4\n\nStdout:\n2025-08-11 23:57:06,463 - src.main - INFO - Basic logging initialized\n2025-08-11 23:57:06,463 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-11 23:57:06,463 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpgizqpd7v/validation_config.properties\n2025-08-11 23:57:06,463 - src.main - INFO - Log level set to: INFO\n2025-08-11 23:57:06,463 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-11 23:57:06,463 - src.main - INFO - Configuration loaded successfully\n2025-08-11 23:57:06,463 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-11 23:57:06,464 - src.services.logging_service - INFO - Logging service initialized\n2025-08-11 23:57:06,464 - src.main - INFO - Comprehensive logging service initialized\n2025-08-11 23:57:06,464 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpgizqpd7v/validation_database.db\n2025-08-11 23:57:06,466 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpgizqpd7v/validation_database.db\n2025-08-11 23:57:06,466 - src.main - INFO - Initializing services...\n2025-08-11 23:57:06,466 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:06,466 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:06,488 - src.services.email_service - ERROR - Email connection test failed: [Errno 8] nodename nor servname provided, or not known\n2025-08-11 23:57:06,489 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: [Errno 8] nodename nor servname provided, or not known\n2025-08-11 23:57:06,489 - src.main - INFO - All services initialized successfully\n2025-08-11 23:57:06,489 - src.main - INFO - Initializing Flask application...\n2025-08-11 23:57:06,490 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:06,490 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:06,490 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-11 23:57:06,492 - src.main - INFO - Flask application initialized\n2025-08-11 23:57:06,492 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-11 23:57:06,492 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-11 23:57:06,493 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-11 23:57:06,493 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-11 23:57:06,493 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-11 23:57:06,493 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-11 23:57:06,493 - src.services.parser_service - INFO - Starting product parsing for URL: https://example.com/product/1\n2025-08-11 23:57:06,493 - src.services.parser_service - INFO - Attempting to parse with StructuredDataParser\n2025-08-11 23:57:06,493 - src.parsers.product_parser.StructuredDataParser - INFO - Successfully parsed structured data: Premium Test Widget - $149.99\n2025-08-11 23:57:06,494 - src.services.parser_service - INFO - Parser StructuredDataParser succeeded with confidence 0.9\n2025-08-11 23:57:06,494 - src.services.parser_service - INFO - High confidence result from StructuredDataParser, stopping\n2025-08-11 23:57:06,494 - src.services.parser_service - INFO - Best parsing result from StructuredDataParser with confidence 0.9\n2025-08-11 23:57:06,499 - src.services.parser_service - INFO - Starting product parsing for URL: https://example.com/product/2\n2025-08-11 23:57:06,500 - src.services.parser_service - INFO - Attempting to parse with StructuredDataParser\n2025-08-11 23:57:06,500 - src.parsers.product_parser.StructuredDataParser - INFO - Successfully parsed structured data: Premium Test Widget - $149.99\n2025-08-11 23:57:06,500 - src.services.parser_service - INFO - Parser StructuredDataParser succeeded with confidence 0.9\n2025-08-11 23:57:06,500 - src.services.parser_service - INFO - High confidence result from StructuredDataParser, stopping\n2025-08-11 23:57:06,500 - src.services.parser_service - INFO - Best parsing result from StructuredDataParser with confidence 0.9\n2025-08-11 23:57:06,503 - src.services.price_monitor_service - INFO - Starting price check for 2 products\n2025-08-11 23:57:06,504 - src.services.price_monitor_service - INFO - Checking price for product: Premium Test Widget (https://example.com/product/2)\n2025-08-11 23:57:06,504 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/2 (attempt 1)\n2025-08-11 23:57:06,504 - src.services.price_monitor_service - INFO - Checking price for product: Premium Test Widget (https://example.com/product/1)\n2025-08-11 23:57:06,505 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:06,985 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:06,985 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:06,985 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 1): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:06,985 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 1.0 seconds (attempt 2/4)\n2025-08-11 23:57:07,565 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/2: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:07,565 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/2: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:07,566 - src.services.price_monitor_service - WARNING - Price check failed for product 2 (attempt 1): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:07,566 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/2 in 1.0 seconds (attempt 2/4)\n2025-08-11 23:57:07,989 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:08,168 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:08,168 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:08,168 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 2): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:08,168 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 2.0 seconds (attempt 3/4)\n2025-08-11 23:57:08,571 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/2 (attempt 1)\n2025-08-11 23:57:08,793 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/2: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:08,797 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/2: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:08,797 - src.services.price_monitor_service - WARNING - Price check failed for product 2 (attempt 2): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:08,797 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/2 in 2.0 seconds (attempt 3/4)\n2025-08-11 23:57:10,173 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:10,327 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:10,327 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:10,327 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 3): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:10,327 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 4.0 seconds (attempt 4/4)\n2025-08-11 23:57:10,802 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/2 (attempt 1)\n2025-08-11 23:57:10,983 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/2: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:10,983 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/2: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:10,983 - src.services.price_monitor_service - WARNING - Price check failed for product 2 (attempt 3): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:10,984 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/2 in 4.0 seconds (attempt 4/4)\n2025-08-11 23:57:14,332 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:14,486 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:14,486 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:14,486 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 4): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:14,486 - src.services.price_monitor_service - ERROR - Product 1 (https://example.com/product/1) failed all 4 attempts. Total consecutive failures: 4\n2025-08-11 23:57:14,486 - src.services.logging_service - INFO - Performance metric: price_check\n2025-08-11 23:57:14,986 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/2 (attempt 1)\n2025-08-11 23:57:15,138 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/2: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:15,138 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/2: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:15,138 - src.services.price_monitor_service - WARNING - Price check failed for product 2 (attempt 4): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/2\n2025-08-11 23:57:15,138 - src.services.price_monitor_service - ERROR - Product 2 (https://example.com/product/2) failed all 4 attempts. Total consecutive failures: 4\n2025-08-11 23:57:15,138 - src.services.logging_service - INFO - Performance metric: price_check\n2025-08-11 23:57:15,139 - src.services.price_monitor_service - INFO - Price check completed: 0/2 successful, 0 price drops, 0 new lowest prices, 0 notifications sent, 0 notification failures, duration: 8.6s\n2025-08-11 23:57:15,140 - src.main - INFO - Initiating graceful shutdown...\n2025-08-11 23:57:20,148 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-11 23:57:20,149 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-11 23:57:20,149 - src.main - INFO - Graceful shutdown completed\n"
        },
        {
          "test": "test_price_drop_email_notification (tests.test_comprehensive_validation.TestRequirement3EmailNotifications.test_price_drop_email_notification)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_comprehensive_validation.py\", line 403, in test_price_drop_email_notification\n    self.assertTrue(check_result.success)\nAssertionError: False is not true\n\nStdout:\n2025-08-11 23:57:20,151 - src.main - INFO - Basic logging initialized\n2025-08-11 23:57:20,151 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-11 23:57:20,151 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmp34ryq409/validation_config.properties\n2025-08-11 23:57:20,152 - src.main - INFO - Log level set to: INFO\n2025-08-11 23:57:20,152 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-11 23:57:20,152 - src.main - INFO - Configuration loaded successfully\n2025-08-11 23:57:20,152 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-11 23:57:20,152 - src.services.logging_service - INFO - Logging service initialized\n2025-08-11 23:57:20,152 - src.main - INFO - Comprehensive logging service initialized\n2025-08-11 23:57:20,152 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmp34ryq409/validation_database.db\n2025-08-11 23:57:20,154 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmp34ryq409/validation_database.db\n2025-08-11 23:57:20,154 - src.main - INFO - Initializing services...\n2025-08-11 23:57:20,154 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:20,154 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:20,177 - src.services.email_service - ERROR - Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-11 23:57:20,179 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-11 23:57:20,179 - src.main - INFO - All services initialized successfully\n2025-08-11 23:57:20,179 - src.main - INFO - Initializing Flask application...\n2025-08-11 23:57:20,180 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:20,180 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:20,180 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-11 23:57:20,182 - src.main - INFO - Flask application initialized\n2025-08-11 23:57:20,182 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-11 23:57:20,182 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-11 23:57:20,182 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-11 23:57:20,182 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-11 23:57:20,183 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-11 23:57:20,183 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-11 23:57:20,183 - src.services.parser_service - INFO - Starting product parsing for URL: https://example.com/product/1\n2025-08-11 23:57:20,183 - src.services.parser_service - INFO - Attempting to parse with StructuredDataParser\n2025-08-11 23:57:20,183 - src.parsers.product_parser.StructuredDataParser - INFO - Successfully parsed structured data: Premium Test Widget - $149.99\n2025-08-11 23:57:20,183 - src.services.parser_service - INFO - Parser StructuredDataParser succeeded with confidence 0.9\n2025-08-11 23:57:20,183 - src.services.parser_service - INFO - High confidence result from StructuredDataParser, stopping\n2025-08-11 23:57:20,183 - src.services.parser_service - INFO - Best parsing result from StructuredDataParser with confidence 0.9\n2025-08-11 23:57:20,188 - src.services.price_monitor_service - INFO - Checking price for product: Premium Test Widget (https://example.com/product/1)\n2025-08-11 23:57:20,188 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:20,645 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:20,649 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:20,649 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 1): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:20,649 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 1.0 seconds (attempt 2/4)\n2025-08-11 23:57:21,654 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:21,897 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:21,898 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:21,898 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 2): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:21,898 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 2.0 seconds (attempt 3/4)\n2025-08-11 23:57:23,903 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:24,370 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:24,370 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:24,370 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 3): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:24,370 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 4.0 seconds (attempt 4/4)\n2025-08-11 23:57:28,375 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:28,554 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:28,554 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:28,555 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 4): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:28,555 - src.services.price_monitor_service - ERROR - Product 1 (https://example.com/product/1) failed all 4 attempts. Total consecutive failures: 4\n2025-08-11 23:57:28,555 - src.services.logging_service - INFO - Performance metric: price_check\n2025-08-11 23:57:28,555 - src.main - INFO - Initiating graceful shutdown...\n2025-08-11 23:57:33,560 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-11 23:57:33,560 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-11 23:57:33,560 - src.main - INFO - Graceful shutdown completed\n"
        },
        {
          "test": "test_missing_configuration_handling (tests.test_comprehensive_validation.TestRequirement4ConfigurationManagement.test_missing_configuration_handling)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_comprehensive_validation.py\", line 482, in test_missing_configuration_handling\n    with self.assertRaises(Exception) as context:\nAssertionError: Exception not raised\n\nStdout:\n2025-08-11 23:57:38,602 - src.main - INFO - Basic logging initialized\n2025-08-11 23:57:38,602 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-11 23:57:38,602 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpyq4ktn_t/incomplete_config.properties\n2025-08-11 23:57:38,603 - src.main - ERROR - Failed to load configuration: Configuration validation failed:\nConfiguration Errors:\n  - ERROR: smtp_server - SMTP server is required for email notifications\n  - ERROR: smtp_username - SMTP username is required for email authentication\n  - ERROR: smtp_password - SMTP password is required for email authentication\n  - ERROR: recipient_email - Recipient email is required for notifications\n"
        },
        {
          "test": "test_price_history_tracking (tests.test_comprehensive_validation.TestRequirement8PriceHistoryTracking.test_price_history_tracking)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_comprehensive_validation.py\", line 679, in test_price_history_tracking\n    self.assertEqual(updated_product.current_price, 119.99)\nAssertionError: 149.99 != 119.99\n\nStdout:\n2025-08-11 23:57:48,746 - src.main - INFO - Basic logging initialized\n2025-08-11 23:57:48,746 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-11 23:57:48,746 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmp44nieda7/validation_config.properties\n2025-08-11 23:57:48,747 - src.main - INFO - Log level set to: INFO\n2025-08-11 23:57:48,747 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-11 23:57:48,747 - src.main - INFO - Configuration loaded successfully\n2025-08-11 23:57:48,747 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-11 23:57:48,748 - src.services.logging_service - INFO - Logging service initialized\n2025-08-11 23:57:48,748 - src.main - INFO - Comprehensive logging service initialized\n2025-08-11 23:57:48,748 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmp44nieda7/validation_database.db\n2025-08-11 23:57:48,750 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmp44nieda7/validation_database.db\n2025-08-11 23:57:48,750 - src.main - INFO - Initializing services...\n2025-08-11 23:57:48,750 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:48,750 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:48,774 - src.services.email_service - ERROR - Email connection test failed: [Errno 8] nodename nor servname provided, or not known\n2025-08-11 23:57:48,775 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: [Errno 8] nodename nor servname provided, or not known\n2025-08-11 23:57:48,775 - src.main - INFO - All services initialized successfully\n2025-08-11 23:57:48,775 - src.main - INFO - Initializing Flask application...\n2025-08-11 23:57:48,776 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:48,776 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:48,776 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-11 23:57:48,778 - src.main - INFO - Flask application initialized\n2025-08-11 23:57:48,779 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-11 23:57:48,779 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-11 23:57:48,779 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-11 23:57:48,779 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-11 23:57:48,779 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-11 23:57:48,779 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-11 23:57:48,779 - src.services.parser_service - INFO - Starting product parsing for URL: https://example.com/product/1\n2025-08-11 23:57:48,779 - src.services.parser_service - INFO - Attempting to parse with StructuredDataParser\n2025-08-11 23:57:48,780 - src.parsers.product_parser.StructuredDataParser - INFO - Successfully parsed structured data: Premium Test Widget - $149.99\n2025-08-11 23:57:48,780 - src.services.parser_service - INFO - Parser StructuredDataParser succeeded with confidence 0.9\n2025-08-11 23:57:48,780 - src.services.parser_service - INFO - High confidence result from StructuredDataParser, stopping\n2025-08-11 23:57:48,780 - src.services.parser_service - INFO - Best parsing result from StructuredDataParser with confidence 0.9\n2025-08-11 23:57:48,787 - src.services.price_monitor_service - INFO - Checking price for product: Premium Test Widget (https://example.com/product/1)\n2025-08-11 23:57:48,787 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:49,252 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:49,252 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:49,252 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 1): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:49,252 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 1.0 seconds (attempt 2/4)\n2025-08-11 23:57:50,257 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:50,404 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:50,404 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:50,404 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 2): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:50,404 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 2.0 seconds (attempt 3/4)\n2025-08-11 23:57:52,405 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:52,553 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:52,554 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:52,554 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 3): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:52,554 - src.services.price_monitor_service - INFO - Retrying https://example.com/product/1 in 4.0 seconds (attempt 4/4)\n2025-08-11 23:57:56,559 - src.services.web_scraping_service - INFO - Fetching URL: https://example.com/product/1 (attempt 1)\n2025-08-11 23:57:56,893 - src.services.web_scraping_service - WARNING - HTTP error fetching https://example.com/product/1: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:56,893 - src.services.price_monitor_service - ERROR - Scraping failed for https://example.com/product/1: Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:56,893 - src.services.price_monitor_service - WARNING - Price check failed for product 1 (attempt 4): Failed to fetch page: HTTP error 404: 404 Client Error: Not Found for url: https://example.com/product/1\n2025-08-11 23:57:56,893 - src.services.price_monitor_service - ERROR - Product 1 (https://example.com/product/1) failed all 4 attempts. Total consecutive failures: 4\n2025-08-11 23:57:56,893 - src.services.logging_service - INFO - Performance metric: price_check\n2025-08-11 23:57:56,894 - src.main - INFO - Initiating graceful shutdown...\n2025-08-11 23:58:01,898 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-11 23:58:01,898 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-11 23:58:01,899 - src.main - INFO - Graceful shutdown completed\n"
        }
      ],
      "error_details": [
        {
          "test": "test_complete_system_integration (tests.test_comprehensive_validation.TestAllRequirementsIntegration.test_complete_system_integration)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_comprehensive_validation.py\", line 803, in test_complete_system_integration\n    app.product_service.update_price_manually(product.id, 139.99)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'ProductService' object has no attribute 'update_price_manually'\n\nStdout:\n2025-08-11 23:56:37,645 - src.main - INFO - Basic logging initialized\n2025-08-11 23:56:37,645 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-11 23:56:37,645 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpwniabghw/validation_config.properties\n2025-08-11 23:56:37,646 - src.main - INFO - Log level set to: INFO\n2025-08-11 23:56:37,646 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-11 23:56:37,646 - src.main - INFO - Configuration loaded successfully\n2025-08-11 23:56:37,646 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-11 23:56:37,646 - src.services.logging_service - INFO - Logging service initialized\n2025-08-11 23:56:37,646 - src.main - INFO - Comprehensive logging service initialized\n2025-08-11 23:56:37,646 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpwniabghw/validation_database.db\n2025-08-11 23:56:37,652 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpwniabghw/validation_database.db\n2025-08-11 23:56:37,652 - src.main - INFO - Initializing services...\n2025-08-11 23:56:37,652 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:56:37,652 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:56:37,669 - src.services.email_service - ERROR - Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-11 23:56:37,670 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-11 23:56:37,670 - src.main - INFO - All services initialized successfully\n2025-08-11 23:56:37,670 - src.main - INFO - Initializing Flask application...\n2025-08-11 23:56:37,671 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:56:37,671 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:56:37,671 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-11 23:56:37,672 - src.main - INFO - Flask application initialized\n2025-08-11 23:56:37,672 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-11 23:56:37,673 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-11 23:56:37,673 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-11 23:56:37,673 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-11 23:56:37,673 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-11 23:56:37,673 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-11 23:56:37,673 - src.services.parser_service - INFO - Starting product parsing for URL: https://example.com/product/1\n2025-08-11 23:56:37,673 - src.services.parser_service - INFO - Attempting to parse with StructuredDataParser\n2025-08-11 23:56:37,674 - src.parsers.product_parser.StructuredDataParser - INFO - Successfully parsed structured data: Premium Test Widget - $149.99\n2025-08-11 23:56:37,674 - src.services.parser_service - INFO - Parser StructuredDataParser succeeded with confidence 0.9\n2025-08-11 23:56:37,674 - src.services.parser_service - INFO - High confidence result from StructuredDataParser, stopping\n2025-08-11 23:56:37,674 - src.services.parser_service - INFO - Best parsing result from StructuredDataParser with confidence 0.9\n2025-08-11 23:56:37,683 - src.main - INFO - Initiating graceful shutdown...\n2025-08-11 23:56:42,688 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-11 23:56:42,688 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-11 23:56:42,688 - src.main - INFO - Graceful shutdown completed\n"
        },
        {
          "test": "test_manual_price_update_workflow (tests.test_comprehensive_validation.TestRequirement7ManualPriceUpdates.test_manual_price_update_workflow)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_comprehensive_validation.py\", line 608, in test_manual_price_update_workflow\n    update_result = app.product_service.update_price_manually(product.id, manual_price)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'ProductService' object has no attribute 'update_price_manually'\n\nStdout:\n2025-08-11 23:57:43,703 - src.main - INFO - Basic logging initialized\n2025-08-11 23:57:43,703 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-11 23:57:43,703 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpjjcyfp3a/validation_config.properties\n2025-08-11 23:57:43,703 - src.main - INFO - Log level set to: INFO\n2025-08-11 23:57:43,703 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-11 23:57:43,703 - src.main - INFO - Configuration loaded successfully\n2025-08-11 23:57:43,703 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-11 23:57:43,704 - src.services.logging_service - INFO - Logging service initialized\n2025-08-11 23:57:43,704 - src.main - INFO - Comprehensive logging service initialized\n2025-08-11 23:57:43,704 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpjjcyfp3a/validation_database.db\n2025-08-11 23:57:43,707 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpjjcyfp3a/validation_database.db\n2025-08-11 23:57:43,707 - src.main - INFO - Initializing services...\n2025-08-11 23:57:43,707 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:43,707 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:43,726 - src.services.email_service - ERROR - Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-11 23:57:43,727 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-11 23:57:43,727 - src.main - INFO - All services initialized successfully\n2025-08-11 23:57:43,727 - src.main - INFO - Initializing Flask application...\n2025-08-11 23:57:43,728 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-11 23:57:43,728 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-11 23:57:43,728 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-11 23:57:43,730 - src.main - INFO - Flask application initialized\n2025-08-11 23:57:43,730 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-11 23:57:43,730 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-11 23:57:43,730 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-11 23:57:43,730 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-11 23:57:43,730 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-11 23:57:43,731 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-11 23:57:43,731 - src.services.parser_service - INFO - Starting product parsing for URL: https://example.com/product/1\n2025-08-11 23:57:43,731 - src.services.parser_service - INFO - Attempting to parse with StructuredDataParser\n2025-08-11 23:57:43,731 - src.parsers.product_parser.StructuredDataParser - INFO - Successfully parsed structured data: Premium Test Widget - $149.99\n2025-08-11 23:57:43,731 - src.services.parser_service - INFO - Parser StructuredDataParser succeeded with confidence 0.9\n2025-08-11 23:57:43,731 - src.services.parser_service - INFO - High confidence result from StructuredDataParser, stopping\n2025-08-11 23:57:43,731 - src.services.parser_service - INFO - Best parsing result from StructuredDataParser with confidence 0.9\n2025-08-11 23:57:43,736 - src.main - INFO - Initiating graceful shutdown...\n2025-08-11 23:57:48,741 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-11 23:57:48,742 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-11 23:57:48,742 - src.main - INFO - Graceful shutdown completed\n"
        }
      ],
      "skipped_details": []
    },
    {
      "module": "tests.test_end_to_end_integration",
      "tests_run": 20,
      "failures": 1,
      "errors": 13,
      "skipped": 0,
      "success": false,
      "output": "test_complete_product_monitoring_workflow (tests.test_end_to_end_integration.TestCompleteWorkflows.test_complete_product_monitoring_workflow)\nTest complete workflow: add product \u2192 parse \u2192 monitor \u2192 price drop \u2192 notify. ... ERROR\ntest_manual_price_update_workflow (tests.test_end_to_end_integration.TestCompleteWorkflows.test_manual_price_update_workflow)\nTest manual price update workflow with email notification. ... ERROR\ntest_multiple_products_monitoring_workflow (tests.test_end_to_end_integration.TestCompleteWorkflows.test_multiple_products_monitoring_workflow)\nTest monitoring multiple products simultaneously. ... ERROR\ntest_container_health_check (tests.test_end_to_end_integration.TestDockerDeploymentIntegration.test_container_health_check)\nTest container health check functionality. ... ok\ntest_docker_build_process (tests.test_end_to_end_integration.TestDockerDeploymentIntegration.test_docker_build_process)\nTest Docker image build process. ... ok\ntest_docker_compose_configuration (tests.test_end_to_end_integration.TestDockerDeploymentIntegration.test_docker_compose_configuration)\nTest Docker Compose configuration validation. ... ok\ntest_automatic_price_drop_notification (tests.test_end_to_end_integration.TestEmailNotificationIntegration.test_automatic_price_drop_notification)\nTest email notification for automatic price drop detection. ... ERROR\ntest_email_failure_handling (tests.test_end_to_end_integration.TestEmailNotificationIntegration.test_email_failure_handling)\nTest handling of email delivery failures. ... ERROR\ntest_manual_price_update_notification (tests.test_end_to_end_integration.TestEmailNotificationIntegration.test_manual_price_update_notification)\nTest email notification for manual price updates. ... ERROR\ntest_mtls_configuration_loading (tests.test_end_to_end_integration.TestMTLSSecurityIntegration.test_mtls_configuration_loading)\nTest mTLS configuration loading. ... FAIL\ntest_static_web_page_with_mtls (tests.test_end_to_end_integration.TestMTLSSecurityIntegration.test_static_web_page_with_mtls)\nTest static web page accessibility with mTLS configuration. ... ok\ntest_requirement_1_add_product_urls (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_1_add_product_urls)\nTest Requirement 1: Add product URLs to monitor. ... ERROR\ntest_requirement_2_automatic_daily_checks (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_2_automatic_daily_checks)\nTest Requirement 2: Automatic daily price checks. ... ERROR\ntest_requirement_3_email_notifications (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_3_email_notifications)\nTest Requirement 3: Email notifications for price drops. ... ERROR\ntest_requirement_4_configuration_management (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_4_configuration_management)\nTest Requirement 4: Configuration through property files. ... ok\ntest_requirement_5_docker_deployment (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_5_docker_deployment)\nTest Requirement 5: Docker deployment capability. ... ok\ntest_requirement_6_product_management (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_6_product_management)\nTest Requirement 6: View and manage monitored products. ... ERROR\ntest_requirement_7_manual_price_updates (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_7_manual_price_updates)\nTest Requirement 7: Manual price updates. ... ERROR\ntest_requirement_8_price_history_tracking (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_8_price_history_tracking)\nTest Requirement 8: Price history tracking. ... ERROR\ntest_requirement_9_ai_parsing_tools (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_9_ai_parsing_tools)\nTest Requirement 9: AI/parsing tools for product information extraction. ... ERROR\n\n======================================================================\nERROR: test_complete_product_monitoring_workflow (tests.test_end_to_end_integration.TestCompleteWorkflows.test_complete_product_monitoring_workflow)\nTest complete workflow: add product \u2192 parse \u2192 monitor \u2192 price drop \u2192 notify.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 154, in test_complete_product_monitoring_workflow\n    mock_email_instance.send_price_drop_notification.return_value = EmailNotificationResult(\n                                                                    ^^^^^^^^^^^^^^^^^^^^^^^\nNameError: name 'EmailNotificationResult' is not defined\n\n======================================================================\nERROR: test_manual_price_update_workflow (tests.test_end_to_end_integration.TestCompleteWorkflows.test_manual_price_update_workflow)\nTest manual price update workflow with email notification.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 238, in test_manual_price_update_workflow\n    mock_email_instance.send_price_drop_notification.return_value = EmailNotificationResult(\n                                                                    ^^^^^^^^^^^^^^^^^^^^^^^\nNameError: name 'EmailNotificationResult' is not defined\n\n======================================================================\nERROR: test_multiple_products_monitoring_workflow (tests.test_end_to_end_integration.TestCompleteWorkflows.test_multiple_products_monitoring_workflow)\nTest monitoring multiple products simultaneously.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 291, in test_multiple_products_monitoring_workflow\n    mock_email_instance.send_price_drop_notification.return_value = EmailNotificationResult(\n                                                                    ^^^^^^^^^^^^^^^^^^^^^^^\nNameError: name 'EmailNotificationResult' is not defined\n\n======================================================================\nERROR: test_automatic_price_drop_notification (tests.test_end_to_end_integration.TestEmailNotificationIntegration.test_automatic_price_drop_notification)\nTest email notification for automatic price drop detection.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 551, in test_automatic_price_drop_notification\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:00:25,437 - src.main - INFO - Basic logging initialized\n2025-08-12 00:00:25,437 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:00:25,437 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_config.properties\n2025-08-12 00:00:25,437 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:00:25,437 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:00:25,437 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:00:25,437 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:00:25,438 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:00:25,438 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:00:25,438 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_database.db\n2025-08-12 00:00:25,440 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_database.db\n2025-08-12 00:00:25,440 - src.main - INFO - Initializing services...\n2025-08-12 00:00:25,441 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:00:25,441 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:00:25,458 - src.services.email_service - ERROR - Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:00:25,459 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:00:25,459 - src.main - INFO - All services initialized successfully\n2025-08-12 00:00:25,459 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:00:25,460 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:00:25,460 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:00:25,460 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:00:25,462 - src.main - INFO - Flask application initialized\n2025-08-12 00:00:25,462 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:00:25,462 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:00:25,462 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:00:25,463 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:00:25,463 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:00:25,463 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:00:25,463 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:00:30,468 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:00:30,469 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:00:30,469 - src.main - INFO - Graceful shutdown completed\n\n======================================================================\nERROR: test_email_failure_handling (tests.test_end_to_end_integration.TestEmailNotificationIntegration.test_email_failure_handling)\nTest handling of email delivery failures.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 644, in test_email_failure_handling\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:00:30,472 - src.main - INFO - Basic logging initialized\n2025-08-12 00:00:30,472 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:00:30,472 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_config.properties\n2025-08-12 00:00:30,473 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:00:30,473 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:00:30,473 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:00:30,473 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:00:30,474 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:00:30,475 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:00:30,475 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_database.db\n2025-08-12 00:00:30,477 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_database.db\n2025-08-12 00:00:30,477 - src.main - INFO - Initializing services...\n2025-08-12 00:00:30,478 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:00:30,478 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:00:30,497 - src.services.email_service - ERROR - Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:00:30,498 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:00:30,498 - src.main - INFO - All services initialized successfully\n2025-08-12 00:00:30,498 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:00:30,499 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:00:30,499 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:00:30,499 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:00:30,501 - src.main - INFO - Flask application initialized\n2025-08-12 00:00:30,501 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:00:30,501 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:00:30,501 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:00:30,501 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:00:30,501 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:00:30,501 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:00:30,502 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:00:35,507 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:00:35,507 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:00:35,507 - src.main - INFO - Graceful shutdown completed\n\n======================================================================\nERROR: test_manual_price_update_notification (tests.test_end_to_end_integration.TestEmailNotificationIntegration.test_manual_price_update_notification)\nTest email notification for manual price updates.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 602, in test_manual_price_update_notification\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:00:35,509 - src.main - INFO - Basic logging initialized\n2025-08-12 00:00:35,509 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:00:35,509 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_config.properties\n2025-08-12 00:00:35,510 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:00:35,510 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:00:35,510 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:00:35,510 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:00:35,510 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:00:35,510 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:00:35,510 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_database.db\n2025-08-12 00:00:35,514 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_database.db\n2025-08-12 00:00:35,515 - src.main - INFO - Initializing services...\n2025-08-12 00:00:35,515 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:00:35,515 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:00:35,533 - src.services.email_service - ERROR - Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:00:35,534 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:00:35,534 - src.main - INFO - All services initialized successfully\n2025-08-12 00:00:35,534 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:00:35,535 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:00:35,535 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:00:35,535 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:00:35,537 - src.main - INFO - Flask application initialized\n2025-08-12 00:00:35,537 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:00:35,537 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:00:35,538 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:00:35,538 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:00:35,538 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:00:35,538 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:00:35,538 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:00:40,540 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:00:40,545 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:00:40,545 - src.main - INFO - Graceful shutdown completed\n\n======================================================================\nERROR: test_requirement_1_add_product_urls (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_1_add_product_urls)\nTest Requirement 1: Add product URLs to monitor.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 695, in test_requirement_1_add_product_urls\n    product = app.product_service.add_product(valid_url)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:02:56,263 - src.main - INFO - Basic logging initialized\n2025-08-12 00:02:56,263 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:02:56,263 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_config.properties\n2025-08-12 00:02:56,264 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:02:56,264 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:02:56,264 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:02:56,264 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:02:56,265 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:02:56,265 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:02:56,265 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:02:56,269 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:02:56,269 - src.main - INFO - Initializing services...\n2025-08-12 00:02:56,269 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:02:56,270 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:05:06,406 - src.services.email_service - ERROR - Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:05:06,414 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:05:06,414 - src.main - INFO - All services initialized successfully\n2025-08-12 00:05:06,414 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:05:06,416 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:05:06,416 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:05:06,416 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:05:06,421 - src.main - INFO - Flask application initialized\n2025-08-12 00:05:06,421 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:05:06,421 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:05:06,421 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:05:06,421 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:05:06,421 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:05:06,421 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:05:06,422 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:05:11,425 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:05:11,426 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:05:11,427 - src.main - INFO - Graceful shutdown completed\n\n======================================================================\nERROR: test_requirement_2_automatic_daily_checks (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_2_automatic_daily_checks)\nTest Requirement 2: Automatic daily price checks.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 740, in test_requirement_2_automatic_daily_checks\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:05:11,431 - src.main - INFO - Basic logging initialized\n2025-08-12 00:05:11,431 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:05:11,431 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_config.properties\n2025-08-12 00:05:11,432 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:05:11,432 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:05:11,432 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:05:11,432 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:05:11,432 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:05:11,433 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:05:11,433 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:05:11,435 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:05:11,435 - src.main - INFO - Initializing services...\n2025-08-12 00:05:11,435 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:05:11,435 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:07:21,575 - src.services.email_service - ERROR - Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:07:21,578 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:07:21,578 - src.main - INFO - All services initialized successfully\n2025-08-12 00:07:21,579 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:07:21,580 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:07:21,580 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:07:21,580 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:07:21,584 - src.main - INFO - Flask application initialized\n2025-08-12 00:07:21,584 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:07:21,584 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:07:21,584 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:07:21,585 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:07:21,585 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:07:21,585 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:07:21,585 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:07:26,588 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:07:26,589 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:07:26,589 - src.main - INFO - Graceful shutdown completed\n\n======================================================================\nERROR: test_requirement_3_email_notifications (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_3_email_notifications)\nTest Requirement 3: Email notifications for price drops.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 785, in test_requirement_3_email_notifications\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:07:26,591 - src.main - INFO - Basic logging initialized\n2025-08-12 00:07:26,591 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:07:26,591 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_config.properties\n2025-08-12 00:07:26,592 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:07:26,592 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:07:26,592 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:07:26,592 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:07:26,593 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:07:26,593 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:07:26,594 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:07:26,598 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:07:26,598 - src.main - INFO - Initializing services...\n2025-08-12 00:07:26,598 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:07:26,598 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:07:26,627 - src.services.email_service - ERROR - Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:07:26,629 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:07:26,629 - src.main - INFO - All services initialized successfully\n2025-08-12 00:07:26,629 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:07:26,630 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:07:26,630 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:07:26,630 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:07:26,632 - src.main - INFO - Flask application initialized\n2025-08-12 00:07:26,632 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:07:26,632 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:07:26,633 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:07:26,633 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:07:26,633 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:07:26,633 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:07:26,633 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:07:31,635 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:07:31,636 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:07:31,636 - src.main - INFO - Graceful shutdown completed\n\n======================================================================\nERROR: test_requirement_6_product_management (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_6_product_management)\nTest Requirement 6: View and manage monitored products.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 893, in test_requirement_6_product_management\n    product1 = app.product_service.add_product(\"https://example.com/product/1\")\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:12:03,068 - src.main - INFO - Basic logging initialized\n2025-08-12 00:12:03,068 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:12:03,068 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_config.properties\n2025-08-12 00:12:03,072 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:12:03,072 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:12:03,072 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:12:03,072 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:12:03,074 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:12:03,074 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:12:03,074 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:12:03,078 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:12:03,078 - src.main - INFO - Initializing services...\n2025-08-12 00:12:03,079 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:12:03,079 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:14:13,200 - src.services.email_service - ERROR - Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:14:13,207 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:14:13,208 - src.main - INFO - All services initialized successfully\n2025-08-12 00:14:13,208 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:14:13,210 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:14:13,210 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:14:13,210 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:14:13,215 - src.main - INFO - Flask application initialized\n2025-08-12 00:14:13,216 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:14:13,216 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:14:13,216 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:14:13,217 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:14:13,217 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:14:13,217 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:14:13,217 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:14:18,219 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:14:18,222 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:14:18,222 - src.main - INFO - Graceful shutdown completed\n\n======================================================================\nERROR: test_requirement_7_manual_price_updates (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_7_manual_price_updates)\nTest Requirement 7: Manual price updates.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 945, in test_requirement_7_manual_price_updates\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:14:18,225 - src.main - INFO - Basic logging initialized\n2025-08-12 00:14:18,226 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:14:18,226 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_config.properties\n2025-08-12 00:14:18,227 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:14:18,227 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:14:18,227 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:14:18,227 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:14:18,228 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:14:18,228 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:14:18,228 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:14:18,233 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:14:18,233 - src.main - INFO - Initializing services...\n2025-08-12 00:14:18,234 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:14:18,234 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:16:28,366 - src.services.email_service - ERROR - Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:16:28,367 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:16:28,368 - src.main - INFO - All services initialized successfully\n2025-08-12 00:16:28,368 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:16:28,370 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:16:28,370 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:16:28,370 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:16:28,375 - src.main - INFO - Flask application initialized\n2025-08-12 00:16:28,375 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:16:28,375 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:16:28,375 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:16:28,375 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:16:28,375 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:16:28,375 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:16:28,375 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:16:33,379 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:16:33,381 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:16:33,382 - src.main - INFO - Graceful shutdown completed\n\n======================================================================\nERROR: test_requirement_8_price_history_tracking (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_8_price_history_tracking)\nTest Requirement 8: Price history tracking.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 992, in test_requirement_8_price_history_tracking\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:16:33,385 - src.main - INFO - Basic logging initialized\n2025-08-12 00:16:33,385 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:16:33,386 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_config.properties\n2025-08-12 00:16:33,387 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:16:33,387 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:16:33,387 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:16:33,387 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:16:33,388 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:16:33,389 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:16:33,389 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:16:33,393 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:16:33,394 - src.main - INFO - Initializing services...\n2025-08-12 00:16:33,394 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:16:33,394 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:18:43,540 - src.services.email_service - ERROR - Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:18:43,541 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:18:43,541 - src.main - INFO - All services initialized successfully\n2025-08-12 00:18:43,541 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:18:43,542 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:18:43,542 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:18:43,543 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:18:43,545 - src.main - INFO - Flask application initialized\n2025-08-12 00:18:43,545 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:18:43,545 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:18:43,545 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:18:43,546 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:18:43,546 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:18:43,546 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:18:43,546 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:18:48,551 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:18:48,552 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:18:48,552 - src.main - INFO - Graceful shutdown completed\n\n======================================================================\nERROR: test_requirement_9_ai_parsing_tools (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_9_ai_parsing_tools)\nTest Requirement 9: AI/parsing tools for product information extraction.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 1040, in test_requirement_9_ai_parsing_tools\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:18:48,555 - src.main - INFO - Basic logging initialized\n2025-08-12 00:18:48,555 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:18:48,555 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_config.properties\n2025-08-12 00:18:48,556 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:18:48,556 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:18:48,556 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:18:48,556 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:18:48,557 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:18:48,557 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:18:48,557 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:18:48,562 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:18:48,562 - src.main - INFO - Initializing services...\n2025-08-12 00:18:48,562 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:18:48,562 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:20:58,701 - src.services.email_service - ERROR - Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:20:58,704 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:20:58,704 - src.main - INFO - All services initialized successfully\n2025-08-12 00:20:58,704 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:20:58,706 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:20:58,706 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:20:58,706 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:20:58,710 - src.main - INFO - Flask application initialized\n2025-08-12 00:20:58,710 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:20:58,710 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:20:58,711 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:20:58,711 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:20:58,711 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:20:58,711 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:20:58,711 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:21:03,715 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:21:03,716 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:21:03,716 - src.main - INFO - Graceful shutdown completed\n\n======================================================================\nFAIL: test_mtls_configuration_loading (tests.test_end_to_end_integration.TestMTLSSecurityIntegration.test_mtls_configuration_loading)\nTest mTLS configuration loading.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 499, in test_mtls_configuration_loading\n    mock_security_service.assert_called_once()\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/unittest/mock.py\", line 923, in assert_called_once\n    raise AssertionError(msg)\nAssertionError: Expected 'SecurityService' to have been called once. Called 0 times.\n\nStdout:\n2025-08-12 00:00:40,548 - src.main - INFO - Basic logging initialized\n2025-08-12 00:00:40,548 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:00:40,549 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpsptjp__y/mtls_config.properties\n2025-08-12 00:00:40,549 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:00:40,549 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:00:40,549 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:00:40,549 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:00:40,550 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:00:40,550 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:00:40,550 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpsptjp__y/test_database.db\n2025-08-12 00:00:40,553 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpsptjp__y/test_database.db\n2025-08-12 00:00:40,553 - src.main - INFO - Initializing services...\n2025-08-12 00:00:40,553 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:00:40,553 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:02:51,239 - src.services.email_service - ERROR - Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:02:51,241 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:02:51,241 - src.main - INFO - All services initialized successfully\n2025-08-12 00:02:51,241 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:02:51,243 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:02:51,243 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:02:51,244 - src.security.security_service - INFO - Successfully loaded certificate bundle\n2025-08-12 00:02:51,248 - src.main - INFO - Flask application initialized\n2025-08-12 00:02:51,248 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:02:51,248 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:02:51,249 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:02:51,249 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:02:51,249 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:02:51,249 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:02:51,249 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:02:56,254 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:02:56,255 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:02:56,255 - src.main - INFO - Graceful shutdown completed\n\n----------------------------------------------------------------------\nRan 20 tests in 1376.777s\n\nFAILED (failures=1, errors=13)\n",
      "failure_details": [
        {
          "test": "test_mtls_configuration_loading (tests.test_end_to_end_integration.TestMTLSSecurityIntegration.test_mtls_configuration_loading)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 499, in test_mtls_configuration_loading\n    mock_security_service.assert_called_once()\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/unittest/mock.py\", line 923, in assert_called_once\n    raise AssertionError(msg)\nAssertionError: Expected 'SecurityService' to have been called once. Called 0 times.\n\nStdout:\n2025-08-12 00:00:40,548 - src.main - INFO - Basic logging initialized\n2025-08-12 00:00:40,548 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:00:40,549 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpsptjp__y/mtls_config.properties\n2025-08-12 00:00:40,549 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:00:40,549 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:00:40,549 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:00:40,549 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:00:40,550 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:00:40,550 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:00:40,550 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpsptjp__y/test_database.db\n2025-08-12 00:00:40,553 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpsptjp__y/test_database.db\n2025-08-12 00:00:40,553 - src.main - INFO - Initializing services...\n2025-08-12 00:00:40,553 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:00:40,553 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:02:51,239 - src.services.email_service - ERROR - Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:02:51,241 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:02:51,241 - src.main - INFO - All services initialized successfully\n2025-08-12 00:02:51,241 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:02:51,243 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:02:51,243 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:02:51,244 - src.security.security_service - INFO - Successfully loaded certificate bundle\n2025-08-12 00:02:51,248 - src.main - INFO - Flask application initialized\n2025-08-12 00:02:51,248 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:02:51,248 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:02:51,249 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:02:51,249 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:02:51,249 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:02:51,249 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:02:51,249 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:02:56,254 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:02:56,255 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:02:56,255 - src.main - INFO - Graceful shutdown completed\n"
        }
      ],
      "error_details": [
        {
          "test": "test_complete_product_monitoring_workflow (tests.test_end_to_end_integration.TestCompleteWorkflows.test_complete_product_monitoring_workflow)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 154, in test_complete_product_monitoring_workflow\n    mock_email_instance.send_price_drop_notification.return_value = EmailNotificationResult(\n                                                                    ^^^^^^^^^^^^^^^^^^^^^^^\nNameError: name 'EmailNotificationResult' is not defined\n"
        },
        {
          "test": "test_manual_price_update_workflow (tests.test_end_to_end_integration.TestCompleteWorkflows.test_manual_price_update_workflow)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 238, in test_manual_price_update_workflow\n    mock_email_instance.send_price_drop_notification.return_value = EmailNotificationResult(\n                                                                    ^^^^^^^^^^^^^^^^^^^^^^^\nNameError: name 'EmailNotificationResult' is not defined\n"
        },
        {
          "test": "test_multiple_products_monitoring_workflow (tests.test_end_to_end_integration.TestCompleteWorkflows.test_multiple_products_monitoring_workflow)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 291, in test_multiple_products_monitoring_workflow\n    mock_email_instance.send_price_drop_notification.return_value = EmailNotificationResult(\n                                                                    ^^^^^^^^^^^^^^^^^^^^^^^\nNameError: name 'EmailNotificationResult' is not defined\n"
        },
        {
          "test": "test_automatic_price_drop_notification (tests.test_end_to_end_integration.TestEmailNotificationIntegration.test_automatic_price_drop_notification)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 551, in test_automatic_price_drop_notification\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:00:25,437 - src.main - INFO - Basic logging initialized\n2025-08-12 00:00:25,437 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:00:25,437 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_config.properties\n2025-08-12 00:00:25,437 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:00:25,437 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:00:25,437 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:00:25,437 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:00:25,438 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:00:25,438 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:00:25,438 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_database.db\n2025-08-12 00:00:25,440 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_database.db\n2025-08-12 00:00:25,440 - src.main - INFO - Initializing services...\n2025-08-12 00:00:25,441 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:00:25,441 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:00:25,458 - src.services.email_service - ERROR - Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:00:25,459 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:00:25,459 - src.main - INFO - All services initialized successfully\n2025-08-12 00:00:25,459 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:00:25,460 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:00:25,460 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:00:25,460 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:00:25,462 - src.main - INFO - Flask application initialized\n2025-08-12 00:00:25,462 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:00:25,462 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:00:25,462 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:00:25,463 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:00:25,463 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:00:25,463 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:00:25,463 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:00:30,468 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:00:30,469 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:00:30,469 - src.main - INFO - Graceful shutdown completed\n"
        },
        {
          "test": "test_email_failure_handling (tests.test_end_to_end_integration.TestEmailNotificationIntegration.test_email_failure_handling)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 644, in test_email_failure_handling\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:00:30,472 - src.main - INFO - Basic logging initialized\n2025-08-12 00:00:30,472 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:00:30,472 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_config.properties\n2025-08-12 00:00:30,473 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:00:30,473 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:00:30,473 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:00:30,473 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:00:30,474 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:00:30,475 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:00:30,475 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_database.db\n2025-08-12 00:00:30,477 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_database.db\n2025-08-12 00:00:30,477 - src.main - INFO - Initializing services...\n2025-08-12 00:00:30,478 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:00:30,478 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:00:30,497 - src.services.email_service - ERROR - Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:00:30,498 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:00:30,498 - src.main - INFO - All services initialized successfully\n2025-08-12 00:00:30,498 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:00:30,499 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:00:30,499 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:00:30,499 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:00:30,501 - src.main - INFO - Flask application initialized\n2025-08-12 00:00:30,501 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:00:30,501 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:00:30,501 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:00:30,501 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:00:30,501 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:00:30,501 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:00:30,502 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:00:35,507 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:00:35,507 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:00:35,507 - src.main - INFO - Graceful shutdown completed\n"
        },
        {
          "test": "test_manual_price_update_notification (tests.test_end_to_end_integration.TestEmailNotificationIntegration.test_manual_price_update_notification)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 602, in test_manual_price_update_notification\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:00:35,509 - src.main - INFO - Basic logging initialized\n2025-08-12 00:00:35,509 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:00:35,509 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_config.properties\n2025-08-12 00:00:35,510 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:00:35,510 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:00:35,510 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:00:35,510 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:00:35,510 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:00:35,510 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:00:35,510 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_database.db\n2025-08-12 00:00:35,514 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpx9hrx5sl/test_database.db\n2025-08-12 00:00:35,515 - src.main - INFO - Initializing services...\n2025-08-12 00:00:35,515 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:00:35,515 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:00:35,533 - src.services.email_service - ERROR - Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:00:35,534 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:00:35,534 - src.main - INFO - All services initialized successfully\n2025-08-12 00:00:35,534 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:00:35,535 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:00:35,535 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:00:35,535 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:00:35,537 - src.main - INFO - Flask application initialized\n2025-08-12 00:00:35,537 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:00:35,537 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:00:35,538 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:00:35,538 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:00:35,538 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:00:35,538 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:00:35,538 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:00:40,540 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:00:40,545 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:00:40,545 - src.main - INFO - Graceful shutdown completed\n"
        },
        {
          "test": "test_requirement_1_add_product_urls (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_1_add_product_urls)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 695, in test_requirement_1_add_product_urls\n    product = app.product_service.add_product(valid_url)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:02:56,263 - src.main - INFO - Basic logging initialized\n2025-08-12 00:02:56,263 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:02:56,263 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_config.properties\n2025-08-12 00:02:56,264 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:02:56,264 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:02:56,264 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:02:56,264 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:02:56,265 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:02:56,265 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:02:56,265 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:02:56,269 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:02:56,269 - src.main - INFO - Initializing services...\n2025-08-12 00:02:56,269 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:02:56,270 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:05:06,406 - src.services.email_service - ERROR - Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:05:06,414 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:05:06,414 - src.main - INFO - All services initialized successfully\n2025-08-12 00:05:06,414 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:05:06,416 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:05:06,416 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:05:06,416 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:05:06,421 - src.main - INFO - Flask application initialized\n2025-08-12 00:05:06,421 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:05:06,421 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:05:06,421 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:05:06,421 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:05:06,421 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:05:06,421 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:05:06,422 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:05:11,425 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:05:11,426 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:05:11,427 - src.main - INFO - Graceful shutdown completed\n"
        },
        {
          "test": "test_requirement_2_automatic_daily_checks (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_2_automatic_daily_checks)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 740, in test_requirement_2_automatic_daily_checks\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:05:11,431 - src.main - INFO - Basic logging initialized\n2025-08-12 00:05:11,431 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:05:11,431 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_config.properties\n2025-08-12 00:05:11,432 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:05:11,432 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:05:11,432 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:05:11,432 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:05:11,432 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:05:11,433 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:05:11,433 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:05:11,435 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:05:11,435 - src.main - INFO - Initializing services...\n2025-08-12 00:05:11,435 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:05:11,435 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:07:21,575 - src.services.email_service - ERROR - Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:07:21,578 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:07:21,578 - src.main - INFO - All services initialized successfully\n2025-08-12 00:07:21,579 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:07:21,580 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:07:21,580 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:07:21,580 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:07:21,584 - src.main - INFO - Flask application initialized\n2025-08-12 00:07:21,584 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:07:21,584 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:07:21,584 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:07:21,585 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:07:21,585 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:07:21,585 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:07:21,585 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:07:26,588 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:07:26,589 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:07:26,589 - src.main - INFO - Graceful shutdown completed\n"
        },
        {
          "test": "test_requirement_3_email_notifications (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_3_email_notifications)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 785, in test_requirement_3_email_notifications\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:07:26,591 - src.main - INFO - Basic logging initialized\n2025-08-12 00:07:26,591 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:07:26,591 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_config.properties\n2025-08-12 00:07:26,592 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:07:26,592 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:07:26,592 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:07:26,592 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:07:26,593 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:07:26,593 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:07:26,594 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:07:26,598 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:07:26,598 - src.main - INFO - Initializing services...\n2025-08-12 00:07:26,598 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:07:26,598 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:07:26,627 - src.services.email_service - ERROR - Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:07:26,629 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: 'Mock' object does not support the context manager protocol\n2025-08-12 00:07:26,629 - src.main - INFO - All services initialized successfully\n2025-08-12 00:07:26,629 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:07:26,630 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:07:26,630 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:07:26,630 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:07:26,632 - src.main - INFO - Flask application initialized\n2025-08-12 00:07:26,632 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:07:26,632 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:07:26,633 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:07:26,633 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:07:26,633 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:07:26,633 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:07:26,633 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:07:31,635 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:07:31,636 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:07:31,636 - src.main - INFO - Graceful shutdown completed\n"
        },
        {
          "test": "test_requirement_6_product_management (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_6_product_management)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 893, in test_requirement_6_product_management\n    product1 = app.product_service.add_product(\"https://example.com/product/1\")\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:12:03,068 - src.main - INFO - Basic logging initialized\n2025-08-12 00:12:03,068 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:12:03,068 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_config.properties\n2025-08-12 00:12:03,072 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:12:03,072 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:12:03,072 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:12:03,072 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:12:03,074 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:12:03,074 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:12:03,074 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:12:03,078 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:12:03,078 - src.main - INFO - Initializing services...\n2025-08-12 00:12:03,079 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:12:03,079 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:14:13,200 - src.services.email_service - ERROR - Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:14:13,207 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:14:13,208 - src.main - INFO - All services initialized successfully\n2025-08-12 00:14:13,208 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:14:13,210 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:14:13,210 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:14:13,210 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:14:13,215 - src.main - INFO - Flask application initialized\n2025-08-12 00:14:13,216 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:14:13,216 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:14:13,216 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:14:13,217 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:14:13,217 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:14:13,217 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:14:13,217 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:14:18,219 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:14:18,222 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:14:18,222 - src.main - INFO - Graceful shutdown completed\n"
        },
        {
          "test": "test_requirement_7_manual_price_updates (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_7_manual_price_updates)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 945, in test_requirement_7_manual_price_updates\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:14:18,225 - src.main - INFO - Basic logging initialized\n2025-08-12 00:14:18,226 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:14:18,226 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_config.properties\n2025-08-12 00:14:18,227 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:14:18,227 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:14:18,227 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:14:18,227 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:14:18,228 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:14:18,228 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:14:18,228 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:14:18,233 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:14:18,233 - src.main - INFO - Initializing services...\n2025-08-12 00:14:18,234 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:14:18,234 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:16:28,366 - src.services.email_service - ERROR - Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:16:28,367 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:16:28,368 - src.main - INFO - All services initialized successfully\n2025-08-12 00:16:28,368 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:16:28,370 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:16:28,370 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:16:28,370 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:16:28,375 - src.main - INFO - Flask application initialized\n2025-08-12 00:16:28,375 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:16:28,375 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:16:28,375 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:16:28,375 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:16:28,375 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:16:28,375 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:16:28,375 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:16:33,379 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:16:33,381 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:16:33,382 - src.main - INFO - Graceful shutdown completed\n"
        },
        {
          "test": "test_requirement_8_price_history_tracking (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_8_price_history_tracking)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 992, in test_requirement_8_price_history_tracking\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:16:33,385 - src.main - INFO - Basic logging initialized\n2025-08-12 00:16:33,385 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:16:33,386 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_config.properties\n2025-08-12 00:16:33,387 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:16:33,387 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:16:33,387 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:16:33,387 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:16:33,388 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:16:33,389 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:16:33,389 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:16:33,393 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:16:33,394 - src.main - INFO - Initializing services...\n2025-08-12 00:16:33,394 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:16:33,394 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:18:43,540 - src.services.email_service - ERROR - Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:18:43,541 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:18:43,541 - src.main - INFO - All services initialized successfully\n2025-08-12 00:18:43,541 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:18:43,542 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:18:43,542 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:18:43,543 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:18:43,545 - src.main - INFO - Flask application initialized\n2025-08-12 00:18:43,545 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:18:43,545 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:18:43,545 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:18:43,546 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:18:43,546 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:18:43,546 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:18:43,546 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:18:48,551 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:18:48,552 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:18:48,552 - src.main - INFO - Graceful shutdown completed\n"
        },
        {
          "test": "test_requirement_9_ai_parsing_tools (tests.test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_9_ai_parsing_tools)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_end_to_end_integration.py\", line 1040, in test_requirement_9_ai_parsing_tools\n    product = app.product_service.add_product(\"https://example.com/product/1\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: ProductService.add_product() missing 2 required positional arguments: 'name' and 'price'\n\nStdout:\n2025-08-12 00:18:48,555 - src.main - INFO - Basic logging initialized\n2025-08-12 00:18:48,555 - src.main - INFO - Starting Price Monitor application initialization...\n2025-08-12 00:18:48,555 - src.main - INFO - Loading configuration from: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_config.properties\n2025-08-12 00:18:48,556 - src.main - INFO - Log level set to: INFO\n2025-08-12 00:18:48,556 - src.main - INFO - Additional log file: logs/price_monitor.log\n2025-08-12 00:18:48,556 - src.main - INFO - Configuration loaded successfully\n2025-08-12 00:18:48,556 - src.main - INFO - Initializing comprehensive logging service...\n2025-08-12 00:18:48,557 - src.services.logging_service - INFO - Logging service initialized\n2025-08-12 00:18:48,557 - src.main - INFO - Comprehensive logging service initialized\n2025-08-12 00:18:48,557 - src.main - INFO - Initializing database...\nDatabase initialized at: sqlite:////var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:18:48,562 - src.main - INFO - Database initialized: /var/folders/8q/ll98z0714m100_v068bvs_nw0000gn/T/tmpt_i9ig2v/test_database.db\n2025-08-12 00:18:48,562 - src.main - INFO - Initializing services...\n2025-08-12 00:18:48,562 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:18:48,562 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:20:58,701 - src.services.email_service - ERROR - Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:20:58,704 - src.main - WARNING - Email service initialized but connection test failed: Email connection test failed: Connection unexpectedly closed\n2025-08-12 00:20:58,704 - src.main - INFO - All services initialized successfully\n2025-08-12 00:20:58,704 - src.main - INFO - Initializing Flask application...\n2025-08-12 00:20:58,706 - src.services.parser_service - INFO - Registered parser: StructuredDataParser\n2025-08-12 00:20:58,706 - src.services.parser_service - INFO - Registered parser: HtmlCssParser\n2025-08-12 00:20:58,706 - src.security.security_service - INFO - mTLS disabled, skipping certificate loading\n2025-08-12 00:20:58,710 - src.main - INFO - Flask application initialized\n2025-08-12 00:20:58,710 - src.main - INFO - Starting price monitoring scheduler...\n2025-08-12 00:20:58,710 - src.services.price_monitor_service - INFO - Scheduled daily price checks at 09:00\n2025-08-12 00:20:58,711 - src.services.price_monitor_service - INFO - Price monitoring scheduler started\n2025-08-12 00:20:58,711 - src.main - INFO - Price monitoring scheduler started (daily at 09:00)\n2025-08-12 00:20:58,711 - src.main - INFO - Scheduled daily logging data cleanup at 02:00\n2025-08-12 00:20:58,711 - src.main - INFO - Price Monitor application initialized successfully\n2025-08-12 00:20:58,711 - src.main - INFO - Initiating graceful shutdown...\n2025-08-12 00:21:03,715 - src.services.price_monitor_service - INFO - Price monitoring scheduler stopped\n2025-08-12 00:21:03,716 - src.main - ERROR - Error closing database: 'DatabaseManager' object has no attribute 'close'\n2025-08-12 00:21:03,716 - src.main - INFO - Graceful shutdown completed\n"
        }
      ],
      "skipped_details": []
    },
    {
      "module": "tests.test_mtls_integration",
      "tests_run": 5,
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "success": true,
      "output": "test_certificate_info_extraction (tests.test_mtls_integration.TestMTLSIntegration.test_certificate_info_extraction)\nTest certificate information extraction. ... ok\ntest_certificate_validation_without_ca (tests.test_mtls_integration.TestMTLSIntegration.test_certificate_validation_without_ca)\nTest certificate validation when CA bundle is not loaded. ... ok\ntest_complete_certificate_workflow (tests.test_mtls_integration.TestMTLSIntegration.test_complete_certificate_workflow)\nTest complete certificate loading and validation workflow. ... ok\ntest_invalid_certificate_rejection (tests.test_mtls_integration.TestMTLSIntegration.test_invalid_certificate_rejection)\nTest that invalid certificates are properly rejected. ... ok\ntest_ssl_context_creation (tests.test_mtls_integration.TestMTLSIntegration.test_ssl_context_creation)\nTest SSL context creation with real certificates. ... ok\n\n----------------------------------------------------------------------\nRan 5 tests in 1.222s\n\nOK\n",
      "failure_details": [],
      "error_details": [],
      "skipped_details": []
    },
    {
      "module": "tests.test_price_monitor_email_integration",
      "import_error": "cannot import name 'ParsingResult' from 'src.models.web_scraping' (/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/../src/models/web_scraping.py)",
      "tests_run": 0,
      "success": false
    },
    {
      "module": "tests.test_product_management_integration",
      "tests_run": 6,
      "failures": 5,
      "errors": 1,
      "skipped": 0,
      "success": false,
      "output": "test_complete_product_workflow (tests.test_product_management_integration.TestProductManagementIntegration.test_complete_product_workflow)\nTest complete product management workflow from add to delete. ... ERROR\ntest_error_handling_in_workflow (tests.test_product_management_integration.TestProductManagementIntegration.test_error_handling_in_workflow)\nTest error handling throughout the product management workflow. ... FAIL\ntest_price_change_calculation (tests.test_product_management_integration.TestProductManagementIntegration.test_price_change_calculation)\nTest that price change information is calculated correctly. ... FAIL\ntest_product_deletion_with_confirmation (tests.test_product_management_integration.TestProductManagementIntegration.test_product_deletion_with_confirmation)\nTest product deletion with confirmation workflow. ... FAIL\ntest_product_listing_validation (tests.test_product_management_integration.TestProductManagementIntegration.test_product_listing_validation)\nTest validation of product listing parameters. ... FAIL\ntest_product_listing_with_filtering_and_sorting (tests.test_product_management_integration.TestProductManagementIntegration.test_product_listing_with_filtering_and_sorting)\nTest product listing with various filtering and sorting options. ... FAIL\n\n======================================================================\nERROR: test_complete_product_workflow (tests.test_product_management_integration.TestProductManagementIntegration.test_complete_product_workflow)\nTest complete product management workflow from add to delete.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_product_management_integration.py\", line 226, in test_complete_product_workflow\n    page_content=PageContent(html=\"<html>Test</html>\", url=\"https://example.com/new-product\")\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: PageContent.__init__() missing 2 required positional arguments: 'status_code' and 'headers'\n\n======================================================================\nFAIL: test_error_handling_in_workflow (tests.test_product_management_integration.TestProductManagementIntegration.test_error_handling_in_workflow)\nTest error handling throughout the product management workflow.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_product_management_integration.py\", line 379, in test_error_handling_in_workflow\n    self.assertEqual(response.status_code, 400)\nAssertionError: 401 != 400\n\n======================================================================\nFAIL: test_price_change_calculation (tests.test_product_management_integration.TestProductManagementIntegration.test_price_change_calculation)\nTest that price change information is calculated correctly.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_product_management_integration.py\", line 356, in test_price_change_calculation\n    self.assertEqual(response.status_code, 200)\nAssertionError: 401 != 200\n\n======================================================================\nFAIL: test_product_deletion_with_confirmation (tests.test_product_management_integration.TestProductManagementIntegration.test_product_deletion_with_confirmation)\nTest product deletion with confirmation workflow.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_product_management_integration.py\", line 201, in test_product_deletion_with_confirmation\n    self.assertEqual(response.status_code, 200)\nAssertionError: 401 != 200\n\n======================================================================\nFAIL: test_product_listing_validation (tests.test_product_management_integration.TestProductManagementIntegration.test_product_listing_validation)\nTest validation of product listing parameters.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_product_management_integration.py\", line 170, in test_product_listing_validation\n    self.assertEqual(response.status_code, 400)\nAssertionError: 401 != 400\n\n======================================================================\nFAIL: test_product_listing_with_filtering_and_sorting (tests.test_product_management_integration.TestProductManagementIntegration.test_product_listing_with_filtering_and_sorting)\nTest product listing with various filtering and sorting options.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_product_management_integration.py\", line 122, in test_product_listing_with_filtering_and_sorting\n    self.assertEqual(response.status_code, 200)\nAssertionError: 401 != 200\n\n----------------------------------------------------------------------\nRan 6 tests in 0.027s\n\nFAILED (failures=5, errors=1)\n",
      "failure_details": [
        {
          "test": "test_error_handling_in_workflow (tests.test_product_management_integration.TestProductManagementIntegration.test_error_handling_in_workflow)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_product_management_integration.py\", line 379, in test_error_handling_in_workflow\n    self.assertEqual(response.status_code, 400)\nAssertionError: 401 != 400\n"
        },
        {
          "test": "test_price_change_calculation (tests.test_product_management_integration.TestProductManagementIntegration.test_price_change_calculation)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_product_management_integration.py\", line 356, in test_price_change_calculation\n    self.assertEqual(response.status_code, 200)\nAssertionError: 401 != 200\n"
        },
        {
          "test": "test_product_deletion_with_confirmation (tests.test_product_management_integration.TestProductManagementIntegration.test_product_deletion_with_confirmation)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_product_management_integration.py\", line 201, in test_product_deletion_with_confirmation\n    self.assertEqual(response.status_code, 200)\nAssertionError: 401 != 200\n"
        },
        {
          "test": "test_product_listing_validation (tests.test_product_management_integration.TestProductManagementIntegration.test_product_listing_validation)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_product_management_integration.py\", line 170, in test_product_listing_validation\n    self.assertEqual(response.status_code, 400)\nAssertionError: 401 != 400\n"
        },
        {
          "test": "test_product_listing_with_filtering_and_sorting (tests.test_product_management_integration.TestProductManagementIntegration.test_product_listing_with_filtering_and_sorting)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_product_management_integration.py\", line 122, in test_product_listing_with_filtering_and_sorting\n    self.assertEqual(response.status_code, 200)\nAssertionError: 401 != 200\n"
        }
      ],
      "error_details": [
        {
          "test": "test_complete_product_workflow (tests.test_product_management_integration.TestProductManagementIntegration.test_complete_product_workflow)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_product_management_integration.py\", line 226, in test_complete_product_workflow\n    page_content=PageContent(html=\"<html>Test</html>\", url=\"https://example.com/new-product\")\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: PageContent.__init__() missing 2 required positional arguments: 'status_code' and 'headers'\n"
        }
      ],
      "skipped_details": []
    },
    {
      "module": "tests.test_api_integration",
      "tests_run": 6,
      "failures": 4,
      "errors": 0,
      "skipped": 0,
      "success": false,
      "output": "test_add_product_validation (tests.test_api_integration.TestProductAPIIntegration.test_add_product_validation)\nTest input validation for adding products. ... FAIL\ntest_api_endpoints_exist (tests.test_api_integration.TestProductAPIIntegration.test_api_endpoints_exist)\nTest that all required API endpoints exist. ... FAIL\ntest_error_handlers (tests.test_api_integration.TestProductAPIIntegration.test_error_handlers)\nTest error handlers. ... ok\ntest_get_products_endpoint_structure (tests.test_api_integration.TestProductAPIIntegration.test_get_products_endpoint_structure)\nTest the structure of the get products endpoint response. ... FAIL\ntest_health_endpoint (tests.test_api_integration.TestProductAPIIntegration.test_health_endpoint)\nTest the health check endpoint. ... ok\ntest_price_update_validation (tests.test_api_integration.TestProductAPIIntegration.test_price_update_validation)\nTest input validation for price updates. ... FAIL\n\n======================================================================\nFAIL: test_add_product_validation (tests.test_api_integration.TestProductAPIIntegration.test_add_product_validation)\nTest input validation for adding products.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_api_integration.py\", line 129, in test_add_product_validation\n    self.assertEqual(response.status_code, 400)\nAssertionError: 401 != 400\n\n======================================================================\nFAIL: test_api_endpoints_exist (tests.test_api_integration.TestProductAPIIntegration.test_api_endpoints_exist)\nTest that all required API endpoints exist.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_api_integration.py\", line 241, in test_api_endpoints_exist\n    self.assertIn(method, route_methods,\nAssertionError: 'POST' not found in ['OPTIONS', 'HEAD', 'GET'] : Method POST not found for endpoint /api/products\n\n======================================================================\nFAIL: test_get_products_endpoint_structure (tests.test_api_integration.TestProductAPIIntegration.test_get_products_endpoint_structure)\nTest the structure of the get products endpoint response.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_api_integration.py\", line 93, in test_get_products_endpoint_structure\n    self.assertEqual(response.status_code, 200)\nAssertionError: 401 != 200\n\n======================================================================\nFAIL: test_price_update_validation (tests.test_api_integration.TestProductAPIIntegration.test_price_update_validation)\nTest input validation for price updates.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_api_integration.py\", line 163, in test_price_update_validation\n    self.assertEqual(response.status_code, 400)\nAssertionError: 401 != 400\n\n----------------------------------------------------------------------\nRan 6 tests in 0.022s\n\nFAILED (failures=4)\n",
      "failure_details": [
        {
          "test": "test_add_product_validation (tests.test_api_integration.TestProductAPIIntegration.test_add_product_validation)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_api_integration.py\", line 129, in test_add_product_validation\n    self.assertEqual(response.status_code, 400)\nAssertionError: 401 != 400\n"
        },
        {
          "test": "test_api_endpoints_exist (tests.test_api_integration.TestProductAPIIntegration.test_api_endpoints_exist)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_api_integration.py\", line 241, in test_api_endpoints_exist\n    self.assertIn(method, route_methods,\nAssertionError: 'POST' not found in ['OPTIONS', 'HEAD', 'GET'] : Method POST not found for endpoint /api/products\n"
        },
        {
          "test": "test_get_products_endpoint_structure (tests.test_api_integration.TestProductAPIIntegration.test_get_products_endpoint_structure)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_api_integration.py\", line 93, in test_get_products_endpoint_structure\n    self.assertEqual(response.status_code, 200)\nAssertionError: 401 != 200\n"
        },
        {
          "test": "test_price_update_validation (tests.test_api_integration.TestProductAPIIntegration.test_price_update_validation)",
          "traceback": "Traceback (most recent call last):\n  File \"/Users/a/Documents/projects/ai-price-checker/ai-price-checker/tests/test_api_integration.py\", line 163, in test_price_update_validation\n    self.assertEqual(response.status_code, 400)\nAssertionError: 401 != 400\n"
        }
      ],
      "error_details": [],
      "skipped_details": []
    },
    {
      "module": "tests.test_main_application",
      "tests_run": 0,
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "success": true,
      "output": "\n----------------------------------------------------------------------\nRan 0 tests in 0.000s\n\nNO TESTS RAN\n",
      "failure_details": [],
      "error_details": [],
      "skipped_details": []
    },
    {
      "module": "tests.test_config_integration",
      "tests_run": 4,
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "success": true,
      "output": "test_complete_configuration_workflow (tests.test_config_integration.TestConfigIntegration.test_complete_configuration_workflow)\nTest the complete configuration loading and validation workflow. ... ok\ntest_configuration_error_handling (tests.test_config_integration.TestConfigIntegration.test_configuration_error_handling)\nTest comprehensive error handling in configuration loading. ... ok\ntest_default_config_file_creation_and_loading (tests.test_config_integration.TestConfigIntegration.test_default_config_file_creation_and_loading)\nTest creating and loading a default configuration file. ... ok\ntest_minimal_valid_configuration (tests.test_config_integration.TestConfigIntegration.test_minimal_valid_configuration)\nTest loading a minimal but valid configuration. ... ok\n\n----------------------------------------------------------------------\nRan 4 tests in 0.003s\n\nOK\n",
      "failure_details": [],
      "error_details": [],
      "skipped_details": []
    },
    {
      "module": "tests.test_logging_integration",
      "tests_run": 4,
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "success": true,
      "output": "test_application_initialization_with_logging (tests.test_logging_integration.TestLoggingIntegration.test_application_initialization_with_logging)\nTest that the application initializes correctly with logging service. ... ok\ntest_logging_service_error_tracking (tests.test_logging_integration.TestLoggingIntegration.test_logging_service_error_tracking)\nTest that error tracking works in the application context. ... ok\ntest_logging_service_performance_monitoring (tests.test_logging_integration.TestLoggingIntegration.test_logging_service_performance_monitoring)\nTest that performance monitoring works in the application context. ... ok\ntest_structured_logging_output (tests.test_logging_integration.TestLoggingIntegration.test_structured_logging_output)\nTest that structured logging produces JSON output. ... ok\n\n----------------------------------------------------------------------\nRan 4 tests in 20.099s\n\nOK\n",
      "failure_details": [],
      "error_details": [],
      "skipped_details": []
    },
    {
      "module": "tests.test_parsing_integration",
      "tests_run": 9,
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "success": true,
      "output": "test_end_to_end_workflow (tests.test_parsing_integration.TestParsingIntegration.test_end_to_end_workflow)\nTest the complete end-to-end workflow from URL to parsed product. ... ok\ntest_parse_html_product_fallback (tests.test_parsing_integration.TestParsingIntegration.test_parse_html_product_fallback)\nTest parsing a product page with HTML/CSS selectors as fallback. ... ok\ntest_parse_invalid_product_data (tests.test_parsing_integration.TestParsingIntegration.test_parse_invalid_product_data)\nTest parsing a page with invalid product data. ... ok\ntest_parse_microdata_product (tests.test_parsing_integration.TestParsingIntegration.test_parse_microdata_product)\nTest parsing a product page with microdata. ... ok\ntest_parse_multiple_strategies_best_wins (tests.test_parsing_integration.TestParsingIntegration.test_parse_multiple_strategies_best_wins)\nTest that the best parsing strategy wins when multiple can parse. ... ok\ntest_parse_no_product_data (tests.test_parsing_integration.TestParsingIntegration.test_parse_no_product_data)\nTest parsing a page with no product data. ... ok\ntest_parse_structured_data_product (tests.test_parsing_integration.TestParsingIntegration.test_parse_structured_data_product)\nTest parsing a product page with structured data. ... ok\ntest_parser_capability_testing (tests.test_parsing_integration.TestParsingIntegration.test_parser_capability_testing)\nTest the parser capability testing functionality. ... ok\ntest_parser_service_stats (tests.test_parsing_integration.TestParsingIntegration.test_parser_service_stats)\nTest getting parser service statistics. ... ok\n\n----------------------------------------------------------------------\nRan 9 tests in 0.026s\n\nOK\n",
      "failure_details": [],
      "error_details": [],
      "skipped_details": []
    },
    {
      "module": "tests.test_price_monitor_error_handling",
      "tests_run": 18,
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "success": true,
      "output": "test_calculate_retry_delay (tests.test_price_monitor_error_handling.TestErrorHandling.test_calculate_retry_delay)\nTest exponential backoff calculation. ... ok\ntest_clear_error_history (tests.test_price_monitor_error_handling.TestErrorHandling.test_clear_error_history)\nTest clearing error history and failure tracking. ... ok\ntest_error_history_limit (tests.test_price_monitor_error_handling.TestErrorHandling.test_error_history_limit)\nTest that error history is limited to prevent memory issues. ... ok\ntest_error_record_creation (tests.test_price_monitor_error_handling.TestErrorHandling.test_error_record_creation)\nTest ErrorRecord data class. ... ok\ntest_error_recording (tests.test_price_monitor_error_handling.TestErrorHandling.test_error_recording)\nTest error recording functionality. ... ok\ntest_failure_tracking_and_reset (tests.test_price_monitor_error_handling.TestErrorHandling.test_failure_tracking_and_reset)\nTest failure tracking and reset on success. ... ok\ntest_get_error_summary (tests.test_price_monitor_error_handling.TestErrorHandling.test_get_error_summary)\nTest error summary generation. ... ok\ntest_get_error_summary_no_errors (tests.test_price_monitor_error_handling.TestErrorHandling.test_get_error_summary_no_errors)\nTest error summary when no errors exist. ... ok\ntest_get_failing_products (tests.test_price_monitor_error_handling.TestErrorHandling.test_get_failing_products)\nTest getting list of failing products. ... ok\ntest_invalid_price_handling (tests.test_price_monitor_error_handling.TestErrorHandling.test_invalid_price_handling)\nTest handling of invalid prices during check. ... ok\ntest_is_valid_price (tests.test_price_monitor_error_handling.TestErrorHandling.test_is_valid_price)\nTest price validation. ... ok\ntest_persistent_failure_handling (tests.test_price_monitor_error_handling.TestErrorHandling.test_persistent_failure_handling)\nTest handling of persistent failures. ... ok\ntest_retry_failed_products (tests.test_price_monitor_error_handling.TestErrorHandling.test_retry_failed_products)\nTest retrying failed products. ... ok\ntest_retry_failed_products_no_failures (tests.test_price_monitor_error_handling.TestErrorHandling.test_retry_failed_products_no_failures)\nTest retrying when no products are failing. ... ok\ntest_retry_logic_all_attempts_fail (tests.test_price_monitor_error_handling.TestErrorHandling.test_retry_logic_all_attempts_fail)\nTest that retry logic eventually gives up after max retries. ... ok\ntest_retry_logic_success_after_failure (tests.test_price_monitor_error_handling.TestErrorHandling.test_retry_logic_success_after_failure)\nTest that retry logic works when first attempt fails but second succeeds. ... ok\ntest_should_skip_url_recent_failure (tests.test_price_monitor_error_handling.TestErrorHandling.test_should_skip_url_recent_failure)\nTest that URLs with recent failures are skipped. ... ok\ntest_url_skipping_in_check_product (tests.test_price_monitor_error_handling.TestErrorHandling.test_url_skipping_in_check_product)\nTest that check_product skips URLs with recent failures. ... ok\n\n----------------------------------------------------------------------\nRan 18 tests in 0.749s\n\nOK\n",
      "failure_details": [],
      "error_details": [],
      "skipped_details": []
    },
    {
      "module": "tests.test_product_listing_features",
      "tests_run": 8,
      "failures": 0,
      "errors": 0,
      "skipped": 0,
      "success": true,
      "output": "test_pagination_logic (tests.test_product_listing_features.TestProductListingFeatures.test_pagination_logic)\nTest pagination logic. ... ok\ntest_price_change_calculation_logic (tests.test_product_listing_features.TestProductListingFeatures.test_price_change_calculation_logic)\nTest price change calculation logic. ... ok\ntest_product_data_serialization (tests.test_product_listing_features.TestProductListingFeatures.test_product_data_serialization)\nTest that product data is properly serialized for JSON response. ... ok\ntest_product_filtering_and_sorting_logic (tests.test_product_listing_features.TestProductListingFeatures.test_product_filtering_and_sorting_logic)\nTest the filtering and sorting logic without HTTP requests. ... ok\ntest_product_status_filtering (tests.test_product_listing_features.TestProductListingFeatures.test_product_status_filtering)\nTest filtering products by active status. ... ok\ntest_search_functionality (tests.test_product_listing_features.TestProductListingFeatures.test_search_functionality)\nTest search functionality across different fields. ... ok\ntest_sorting_edge_cases (tests.test_product_listing_features.TestProductListingFeatures.test_sorting_edge_cases)\nTest sorting with edge cases like None values. ... ok\ntest_validation_logic (tests.test_product_listing_features.TestProductListingFeatures.test_validation_logic)\nTest validation logic for API parameters. ... ok\n\n----------------------------------------------------------------------\nRan 8 tests in 0.012s\n\nOK\n",
      "failure_details": [],
      "error_details": [],
      "skipped_details": []
    }
  ],
  "environment_info": {
    "python_version": "3.12.0 (v3.12.0:0fb18b02c8, Oct  2 2023, 09:45:56) [Clang 13.0.0 (clang-1300.0.29.30)]",
    "os": "Darwin",
    "os_version": "23.6.0",
    "architecture": "arm64",
    "docker_available": true,
    "docker_version": "Docker version 24.0.7, build afdd53b",
    "docker_compose_available": true,
    "docker_compose_version": "Docker Compose version v2.23.3-desktop.2",
    "selenium_available": false,
    "missing_files": [],
    "all_files_present": true,
    "skip_docker": true,
    "skip_selenium": true
  },
  "requirements_validation": {
    "1. Add product URLs to monitor": {
      "description": "URL validation, parsing, and storage",
      "test_modules": [
        "test_comprehensive_validation.TestRequirement1AddProductURLs",
        "test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_1_add_product_urls",
        "test_product_management_integration",
        "test_parsing_integration"
      ],
      "validated": true
    },
    "2. Automatic daily price checks": {
      "description": "Scheduled monitoring and price comparison",
      "test_modules": [
        "test_comprehensive_validation.TestRequirement2AutomaticDailyChecks",
        "test_end_to_end_integration.TestUserRequirementsValidation.test_requirement_2_automatic_daily_checks",
        "test_price_monitor_service",
        "test_main_application"
      ],
      "validated": true
    },
    "3. Email notifications for price drops": {
      "description": "Price drop notifications with product details",
      "test_modules": [
        "test_comprehensive_validation.TestRequirement3EmailNotifications",
        "test_price_monitor_email_integration",
        "test_email_service",
        "test_end_to_end_integration.TestEmailNotificationIntegration"
      ],
      "validated": true
    },
    "4. Configuration through property files": {
      "description": "Property file loading and validation",
      "test_modules": [
        "test_comprehensive_validation.TestRequirement4ConfigurationManagement",
        "test_config_integration",
        "test_config_service"
      ],
      "validated": true
    },
    "5. Docker deployment capability": {
      "description": "Containerized deployment and configuration",
      "test_modules": [
        "test_comprehensive_validation.TestRequirement5DockerDeployment",
        "test_docker_integration",
        "test_end_to_end_integration.TestDockerDeploymentIntegration"
      ],
      "validated": false
    },
    "6. View and manage monitored products": {
      "description": "Product management interface",
      "test_modules": [
        "test_comprehensive_validation.TestRequirement6ProductManagement",
        "test_product_management_integration",
        "test_web_interface",
        "test_static_web_functionality"
      ],
      "validated": true
    },
    "7. Manual price updates": {
      "description": "Manual price entry with validation",
      "test_modules": [
        "test_comprehensive_validation.TestRequirement7ManualPriceUpdates",
        "test_product_service",
        "test_api_integration"
      ],
      "validated": true
    },
    "8. Price history tracking": {
      "description": "Historical price data and trends",
      "test_modules": [
        "test_comprehensive_validation.TestRequirement8PriceHistoryTracking",
        "test_database_models",
        "test_product_service"
      ],
      "validated": true
    },
    "9. AI/parsing tools for product extraction": {
      "description": "Multiple parsing strategies and fallback handling",
      "test_modules": [
        "test_comprehensive_validation.TestRequirement9AIParsingTools",
        "test_parsing_integration",
        "test_product_parsers",
        "test_parser_service"
      ],
      "validated": true
    }
  },
  "coverage_summary": {}
}